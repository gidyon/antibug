// Code generated by protoc-gen-go. DO NOT EDIT.
// source: culture.proto

package culture

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Label is tag/boundary of antimicrobial used for culturing based on its action against the pathogen
type Label int32

const (
	// Antimicrobial was effective
	Label_SUSCEPTIBLE Label = 0
	// The antimicrobial was effective but under a given dosage
	Label_DOSE_SUSCEPTIBLE Label = 2
	// Not effective in certain concentrations
	Label_INTERMEDIATE Label = 3
	// Not effective at all
	Label_RESISTANT Label = 4
)

var Label_name = map[int32]string{
	0: "SUSCEPTIBLE",
	2: "DOSE_SUSCEPTIBLE",
	3: "INTERMEDIATE",
	4: "RESISTANT",
}

var Label_value = map[string]int32{
	"SUSCEPTIBLE":      0,
	"DOSE_SUSCEPTIBLE": 2,
	"INTERMEDIATE":     3,
	"RESISTANT":        4,
}

func (x Label) String() string {
	return proto.EnumName(Label_name, int32(x))
}

func (Label) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{0}
}

// TestMethod is method used to conduct the testing
type TestMethod int32

const (
	// Default test method. Widely used
	TestMethod_DISK_DIFFUSION TestMethod = 0
)

var TestMethod_name = map[int32]string{
	0: "DISK_DIFFUSION",
}

var TestMethod_value = map[string]int32{
	"DISK_DIFFUSION": 0,
}

func (x TestMethod) String() string {
	return proto.EnumName(TestMethod_name, int32(x))
}

func (TestMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{1}
}

// ListTarget is the culture target
type ListTarget int32

const (
	ListTarget_ALL            ListTarget = 0
	ListTarget_COUNTY         ListTarget = 1
	ListTarget_SUB_COUNTY     ListTarget = 2
	ListTarget_HOSPITAL       ListTarget = 3
	ListTarget_PATIENT        ListTarget = 4
	ListTarget_LAB_TECHNICIAN ListTarget = 5
)

var ListTarget_name = map[int32]string{
	0: "ALL",
	1: "COUNTY",
	2: "SUB_COUNTY",
	3: "HOSPITAL",
	4: "PATIENT",
	5: "LAB_TECHNICIAN",
}

var ListTarget_value = map[string]int32{
	"ALL":            0,
	"COUNTY":         1,
	"SUB_COUNTY":     2,
	"HOSPITAL":       3,
	"PATIENT":        4,
	"LAB_TECHNICIAN": 5,
}

func (x ListTarget) String() string {
	return proto.EnumName(ListTarget_name, int32(x))
}

func (ListTarget) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{2}
}

// Culture is a lab result after culturing process
type Culture struct {
	CultureId            string           `protobuf:"bytes,1,opt,name=culture_id,json=cultureId,proto3" json:"culture_id,omitempty"`
	LabTechId            string           `protobuf:"bytes,2,opt,name=lab_tech_id,json=labTechId,proto3" json:"lab_tech_id,omitempty"`
	HospitalId           string           `protobuf:"bytes,3,opt,name=hospital_id,json=hospitalId,proto3" json:"hospital_id,omitempty"`
	CountyCode           string           `protobuf:"bytes,4,opt,name=county_code,json=countyCode,proto3" json:"county_code,omitempty"`
	SubCountyCode        string           `protobuf:"bytes,5,opt,name=sub_county_code,json=subCountyCode,proto3" json:"sub_county_code,omitempty"`
	PatientId            string           `protobuf:"bytes,6,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	PatientGender        string           `protobuf:"bytes,7,opt,name=patient_gender,json=patientGender,proto3" json:"patient_gender,omitempty"`
	PatientAge           int32            `protobuf:"varint,8,opt,name=patient_age,json=patientAge,proto3" json:"patient_age,omitempty"`
	Editors              []string         `protobuf:"bytes,9,rep,name=editors,proto3" json:"editors,omitempty"`
	TestMethod           TestMethod       `protobuf:"varint,10,opt,name=test_method,json=testMethod,proto3,enum=antibug.culture.TestMethod" json:"test_method,omitempty"`
	CultureSource        string           `protobuf:"bytes,11,opt,name=culture_source,json=cultureSource,proto3" json:"culture_source,omitempty"`
	PathogensFound       []string         `protobuf:"bytes,12,rep,name=pathogens_found,json=pathogensFound,proto3" json:"pathogens_found,omitempty"`
	AntimicrobialsUsed   []string         `protobuf:"bytes,13,rep,name=antimicrobials_used,json=antimicrobialsUsed,proto3" json:"antimicrobials_used,omitempty"`
	CultureResults       []*LabTestResult `protobuf:"bytes,14,rep,name=culture_results,json=cultureResults,proto3" json:"culture_results,omitempty"`
	ResultsTimestampSec  int64            `protobuf:"varint,15,opt,name=results_timestamp_sec,json=resultsTimestampSec,proto3" json:"results_timestamp_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Culture) Reset()         { *m = Culture{} }
func (m *Culture) String() string { return proto.CompactTextString(m) }
func (*Culture) ProtoMessage()    {}
func (*Culture) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{0}
}

func (m *Culture) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Culture.Unmarshal(m, b)
}
func (m *Culture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Culture.Marshal(b, m, deterministic)
}
func (m *Culture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Culture.Merge(m, src)
}
func (m *Culture) XXX_Size() int {
	return xxx_messageInfo_Culture.Size(m)
}
func (m *Culture) XXX_DiscardUnknown() {
	xxx_messageInfo_Culture.DiscardUnknown(m)
}

var xxx_messageInfo_Culture proto.InternalMessageInfo

func (m *Culture) GetCultureId() string {
	if m != nil {
		return m.CultureId
	}
	return ""
}

func (m *Culture) GetLabTechId() string {
	if m != nil {
		return m.LabTechId
	}
	return ""
}

func (m *Culture) GetHospitalId() string {
	if m != nil {
		return m.HospitalId
	}
	return ""
}

func (m *Culture) GetCountyCode() string {
	if m != nil {
		return m.CountyCode
	}
	return ""
}

func (m *Culture) GetSubCountyCode() string {
	if m != nil {
		return m.SubCountyCode
	}
	return ""
}

func (m *Culture) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

func (m *Culture) GetPatientGender() string {
	if m != nil {
		return m.PatientGender
	}
	return ""
}

func (m *Culture) GetPatientAge() int32 {
	if m != nil {
		return m.PatientAge
	}
	return 0
}

func (m *Culture) GetEditors() []string {
	if m != nil {
		return m.Editors
	}
	return nil
}

func (m *Culture) GetTestMethod() TestMethod {
	if m != nil {
		return m.TestMethod
	}
	return TestMethod_DISK_DIFFUSION
}

func (m *Culture) GetCultureSource() string {
	if m != nil {
		return m.CultureSource
	}
	return ""
}

func (m *Culture) GetPathogensFound() []string {
	if m != nil {
		return m.PathogensFound
	}
	return nil
}

func (m *Culture) GetAntimicrobialsUsed() []string {
	if m != nil {
		return m.AntimicrobialsUsed
	}
	return nil
}

func (m *Culture) GetCultureResults() []*LabTestResult {
	if m != nil {
		return m.CultureResults
	}
	return nil
}

func (m *Culture) GetResultsTimestampSec() int64 {
	if m != nil {
		return m.ResultsTimestampSec
	}
	return 0
}

// Pathogen is a micro-organism causing infection
type Pathogen struct {
	PathogenId           string   `protobuf:"bytes,1,opt,name=pathogen_id,json=pathogenId,proto3" json:"pathogen_id,omitempty"`
	PathogenName         string   `protobuf:"bytes,2,opt,name=pathogen_name,json=pathogenName,proto3" json:"pathogen_name,omitempty"`
	PathogenCategory     string   `protobuf:"bytes,3,opt,name=pathogen_category,json=pathogenCategory,proto3" json:"pathogen_category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pathogen) Reset()         { *m = Pathogen{} }
func (m *Pathogen) String() string { return proto.CompactTextString(m) }
func (*Pathogen) ProtoMessage()    {}
func (*Pathogen) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{1}
}

func (m *Pathogen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pathogen.Unmarshal(m, b)
}
func (m *Pathogen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pathogen.Marshal(b, m, deterministic)
}
func (m *Pathogen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pathogen.Merge(m, src)
}
func (m *Pathogen) XXX_Size() int {
	return xxx_messageInfo_Pathogen.Size(m)
}
func (m *Pathogen) XXX_DiscardUnknown() {
	xxx_messageInfo_Pathogen.DiscardUnknown(m)
}

var xxx_messageInfo_Pathogen proto.InternalMessageInfo

func (m *Pathogen) GetPathogenId() string {
	if m != nil {
		return m.PathogenId
	}
	return ""
}

func (m *Pathogen) GetPathogenName() string {
	if m != nil {
		return m.PathogenName
	}
	return ""
}

func (m *Pathogen) GetPathogenCategory() string {
	if m != nil {
		return m.PathogenCategory
	}
	return ""
}

// Antimicrobial is a substance that acts againsts a pathogen
type Antimicrobial struct {
	AntimicrobialId      string   `protobuf:"bytes,1,opt,name=antimicrobial_id,json=antimicrobialId,proto3" json:"antimicrobial_id,omitempty"`
	AntimicrobialName    string   `protobuf:"bytes,2,opt,name=antimicrobial_name,json=antimicrobialName,proto3" json:"antimicrobial_name,omitempty"`
	AntimicrobialClass   string   `protobuf:"bytes,3,opt,name=antimicrobial_class,json=antimicrobialClass,proto3" json:"antimicrobial_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Antimicrobial) Reset()         { *m = Antimicrobial{} }
func (m *Antimicrobial) String() string { return proto.CompactTextString(m) }
func (*Antimicrobial) ProtoMessage()    {}
func (*Antimicrobial) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{2}
}

func (m *Antimicrobial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Antimicrobial.Unmarshal(m, b)
}
func (m *Antimicrobial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Antimicrobial.Marshal(b, m, deterministic)
}
func (m *Antimicrobial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Antimicrobial.Merge(m, src)
}
func (m *Antimicrobial) XXX_Size() int {
	return xxx_messageInfo_Antimicrobial.Size(m)
}
func (m *Antimicrobial) XXX_DiscardUnknown() {
	xxx_messageInfo_Antimicrobial.DiscardUnknown(m)
}

var xxx_messageInfo_Antimicrobial proto.InternalMessageInfo

func (m *Antimicrobial) GetAntimicrobialId() string {
	if m != nil {
		return m.AntimicrobialId
	}
	return ""
}

func (m *Antimicrobial) GetAntimicrobialName() string {
	if m != nil {
		return m.AntimicrobialName
	}
	return ""
}

func (m *Antimicrobial) GetAntimicrobialClass() string {
	if m != nil {
		return m.AntimicrobialClass
	}
	return ""
}

// LabTestResult is a single result obtained after the culturing process
type LabTestResult struct {
	PathogenName         string   `protobuf:"bytes,1,opt,name=pathogen_name,json=pathogenName,proto3" json:"pathogen_name,omitempty"`
	PathogenId           string   `protobuf:"bytes,2,opt,name=pathogen_id,json=pathogenId,proto3" json:"pathogen_id,omitempty"`
	AntimicrobialId      string   `protobuf:"bytes,3,opt,name=antimicrobial_id,json=antimicrobialId,proto3" json:"antimicrobial_id,omitempty"`
	AntimicrobialName    string   `protobuf:"bytes,4,opt,name=antimicrobial_name,json=antimicrobialName,proto3" json:"antimicrobial_name,omitempty"`
	DiskDiameter         string   `protobuf:"bytes,5,opt,name=disk_diameter,json=diskDiameter,proto3" json:"disk_diameter,omitempty"`
	NonDiffusionResult   string   `protobuf:"bytes,6,opt,name=non_diffusion_result,json=nonDiffusionResult,proto3" json:"non_diffusion_result,omitempty"`
	ResultComment        string   `protobuf:"bytes,7,opt,name=result_comment,json=resultComment,proto3" json:"result_comment,omitempty"`
	SusceptibilityScore  float32  `protobuf:"fixed32,8,opt,name=susceptibility_score,json=susceptibilityScore,proto3" json:"susceptibility_score,omitempty"`
	Label                Label    `protobuf:"varint,9,opt,name=label,proto3,enum=antibug.culture.Label" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabTestResult) Reset()         { *m = LabTestResult{} }
func (m *LabTestResult) String() string { return proto.CompactTextString(m) }
func (*LabTestResult) ProtoMessage()    {}
func (*LabTestResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{3}
}

func (m *LabTestResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabTestResult.Unmarshal(m, b)
}
func (m *LabTestResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabTestResult.Marshal(b, m, deterministic)
}
func (m *LabTestResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabTestResult.Merge(m, src)
}
func (m *LabTestResult) XXX_Size() int {
	return xxx_messageInfo_LabTestResult.Size(m)
}
func (m *LabTestResult) XXX_DiscardUnknown() {
	xxx_messageInfo_LabTestResult.DiscardUnknown(m)
}

var xxx_messageInfo_LabTestResult proto.InternalMessageInfo

func (m *LabTestResult) GetPathogenName() string {
	if m != nil {
		return m.PathogenName
	}
	return ""
}

func (m *LabTestResult) GetPathogenId() string {
	if m != nil {
		return m.PathogenId
	}
	return ""
}

func (m *LabTestResult) GetAntimicrobialId() string {
	if m != nil {
		return m.AntimicrobialId
	}
	return ""
}

func (m *LabTestResult) GetAntimicrobialName() string {
	if m != nil {
		return m.AntimicrobialName
	}
	return ""
}

func (m *LabTestResult) GetDiskDiameter() string {
	if m != nil {
		return m.DiskDiameter
	}
	return ""
}

func (m *LabTestResult) GetNonDiffusionResult() string {
	if m != nil {
		return m.NonDiffusionResult
	}
	return ""
}

func (m *LabTestResult) GetResultComment() string {
	if m != nil {
		return m.ResultComment
	}
	return ""
}

func (m *LabTestResult) GetSusceptibilityScore() float32 {
	if m != nil {
		return m.SusceptibilityScore
	}
	return 0
}

func (m *LabTestResult) GetLabel() Label {
	if m != nil {
		return m.Label
	}
	return Label_SUSCEPTIBLE
}

// CreateCultureRequest is request to add a culture
type CreateCultureRequest struct {
	Culture              *Culture `protobuf:"bytes,1,opt,name=culture,proto3" json:"culture,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCultureRequest) Reset()         { *m = CreateCultureRequest{} }
func (m *CreateCultureRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCultureRequest) ProtoMessage()    {}
func (*CreateCultureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{4}
}

func (m *CreateCultureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCultureRequest.Unmarshal(m, b)
}
func (m *CreateCultureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCultureRequest.Marshal(b, m, deterministic)
}
func (m *CreateCultureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCultureRequest.Merge(m, src)
}
func (m *CreateCultureRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCultureRequest.Size(m)
}
func (m *CreateCultureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCultureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCultureRequest proto.InternalMessageInfo

func (m *CreateCultureRequest) GetCulture() *Culture {
	if m != nil {
		return m.Culture
	}
	return nil
}

// CreateCultureResponse is response from CreateCultureRequest call
type CreateCultureResponse struct {
	CultureId            string   `protobuf:"bytes,1,opt,name=culture_id,json=cultureId,proto3" json:"culture_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCultureResponse) Reset()         { *m = CreateCultureResponse{} }
func (m *CreateCultureResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCultureResponse) ProtoMessage()    {}
func (*CreateCultureResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{5}
}

func (m *CreateCultureResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCultureResponse.Unmarshal(m, b)
}
func (m *CreateCultureResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCultureResponse.Marshal(b, m, deterministic)
}
func (m *CreateCultureResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCultureResponse.Merge(m, src)
}
func (m *CreateCultureResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCultureResponse.Size(m)
}
func (m *CreateCultureResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCultureResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCultureResponse proto.InternalMessageInfo

func (m *CreateCultureResponse) GetCultureId() string {
	if m != nil {
		return m.CultureId
	}
	return ""
}

// UpdateCultureRequest is request to update a culture resource
type UpdateCultureRequest struct {
	CultureId            string   `protobuf:"bytes,1,opt,name=culture_id,json=cultureId,proto3" json:"culture_id,omitempty"`
	EditorId             string   `protobuf:"bytes,2,opt,name=editor_id,json=editorId,proto3" json:"editor_id,omitempty"`
	Culture              *Culture `protobuf:"bytes,3,opt,name=culture,proto3" json:"culture,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCultureRequest) Reset()         { *m = UpdateCultureRequest{} }
func (m *UpdateCultureRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCultureRequest) ProtoMessage()    {}
func (*UpdateCultureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{6}
}

func (m *UpdateCultureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCultureRequest.Unmarshal(m, b)
}
func (m *UpdateCultureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCultureRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCultureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCultureRequest.Merge(m, src)
}
func (m *UpdateCultureRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCultureRequest.Size(m)
}
func (m *UpdateCultureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCultureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCultureRequest proto.InternalMessageInfo

func (m *UpdateCultureRequest) GetCultureId() string {
	if m != nil {
		return m.CultureId
	}
	return ""
}

func (m *UpdateCultureRequest) GetEditorId() string {
	if m != nil {
		return m.EditorId
	}
	return ""
}

func (m *UpdateCultureRequest) GetCulture() *Culture {
	if m != nil {
		return m.Culture
	}
	return nil
}

// DeleteCultureRequest is request to delete a culture resource
type DeleteCultureRequest struct {
	CultureId            string   `protobuf:"bytes,1,opt,name=culture_id,json=cultureId,proto3" json:"culture_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCultureRequest) Reset()         { *m = DeleteCultureRequest{} }
func (m *DeleteCultureRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCultureRequest) ProtoMessage()    {}
func (*DeleteCultureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{7}
}

func (m *DeleteCultureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCultureRequest.Unmarshal(m, b)
}
func (m *DeleteCultureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCultureRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCultureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCultureRequest.Merge(m, src)
}
func (m *DeleteCultureRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCultureRequest.Size(m)
}
func (m *DeleteCultureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCultureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCultureRequest proto.InternalMessageInfo

func (m *DeleteCultureRequest) GetCultureId() string {
	if m != nil {
		return m.CultureId
	}
	return ""
}

// DateFilter is filter option by date
type DateFilter struct {
	StartTimestampSec    int64    `protobuf:"varint,1,opt,name=start_timestamp_sec,json=startTimestampSec,proto3" json:"start_timestamp_sec,omitempty"`
	EndTimestampSec      int64    `protobuf:"varint,2,opt,name=end_timestamp_sec,json=endTimestampSec,proto3" json:"end_timestamp_sec,omitempty"`
	Filter               bool     `protobuf:"varint,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DateFilter) Reset()         { *m = DateFilter{} }
func (m *DateFilter) String() string { return proto.CompactTextString(m) }
func (*DateFilter) ProtoMessage()    {}
func (*DateFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{8}
}

func (m *DateFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DateFilter.Unmarshal(m, b)
}
func (m *DateFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DateFilter.Marshal(b, m, deterministic)
}
func (m *DateFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DateFilter.Merge(m, src)
}
func (m *DateFilter) XXX_Size() int {
	return xxx_messageInfo_DateFilter.Size(m)
}
func (m *DateFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_DateFilter.DiscardUnknown(m)
}

var xxx_messageInfo_DateFilter proto.InternalMessageInfo

func (m *DateFilter) GetStartTimestampSec() int64 {
	if m != nil {
		return m.StartTimestampSec
	}
	return 0
}

func (m *DateFilter) GetEndTimestampSec() int64 {
	if m != nil {
		return m.EndTimestampSec
	}
	return 0
}

func (m *DateFilter) GetFilter() bool {
	if m != nil {
		return m.Filter
	}
	return false
}

// ListCultureFilter applies filter criteria to listing cultures
type ListCultureFilter struct {
	DateFilter           *DateFilter `protobuf:"bytes,1,opt,name=date_filter,json=dateFilter,proto3" json:"date_filter,omitempty"`
	ListTarget           ListTarget  `protobuf:"varint,2,opt,name=list_target,json=listTarget,proto3,enum=antibug.culture.ListTarget" json:"list_target,omitempty"`
	TargetIds            []string    `protobuf:"bytes,3,rep,name=target_ids,json=targetIds,proto3" json:"target_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListCultureFilter) Reset()         { *m = ListCultureFilter{} }
func (m *ListCultureFilter) String() string { return proto.CompactTextString(m) }
func (*ListCultureFilter) ProtoMessage()    {}
func (*ListCultureFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{9}
}

func (m *ListCultureFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCultureFilter.Unmarshal(m, b)
}
func (m *ListCultureFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCultureFilter.Marshal(b, m, deterministic)
}
func (m *ListCultureFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCultureFilter.Merge(m, src)
}
func (m *ListCultureFilter) XXX_Size() int {
	return xxx_messageInfo_ListCultureFilter.Size(m)
}
func (m *ListCultureFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCultureFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ListCultureFilter proto.InternalMessageInfo

func (m *ListCultureFilter) GetDateFilter() *DateFilter {
	if m != nil {
		return m.DateFilter
	}
	return nil
}

func (m *ListCultureFilter) GetListTarget() ListTarget {
	if m != nil {
		return m.ListTarget
	}
	return ListTarget_ALL
}

func (m *ListCultureFilter) GetTargetIds() []string {
	if m != nil {
		return m.TargetIds
	}
	return nil
}

// ListCulturesRequest is request to retrieve a collection of culture
type ListCulturesRequest struct {
	PageToken            int32              `protobuf:"varint,1,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32              `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Filter               *ListCultureFilter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListCulturesRequest) Reset()         { *m = ListCulturesRequest{} }
func (m *ListCulturesRequest) String() string { return proto.CompactTextString(m) }
func (*ListCulturesRequest) ProtoMessage()    {}
func (*ListCulturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{10}
}

func (m *ListCulturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCulturesRequest.Unmarshal(m, b)
}
func (m *ListCulturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCulturesRequest.Marshal(b, m, deterministic)
}
func (m *ListCulturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCulturesRequest.Merge(m, src)
}
func (m *ListCulturesRequest) XXX_Size() int {
	return xxx_messageInfo_ListCulturesRequest.Size(m)
}
func (m *ListCulturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCulturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCulturesRequest proto.InternalMessageInfo

func (m *ListCulturesRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListCulturesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListCulturesRequest) GetFilter() *ListCultureFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Cultures is collection of cultures
type Cultures struct {
	Cultures             []*Culture `protobuf:"bytes,1,rep,name=cultures,proto3" json:"cultures,omitempty"`
	NextPageToken        int32      `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Cultures) Reset()         { *m = Cultures{} }
func (m *Cultures) String() string { return proto.CompactTextString(m) }
func (*Cultures) ProtoMessage()    {}
func (*Cultures) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{11}
}

func (m *Cultures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cultures.Unmarshal(m, b)
}
func (m *Cultures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cultures.Marshal(b, m, deterministic)
}
func (m *Cultures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cultures.Merge(m, src)
}
func (m *Cultures) XXX_Size() int {
	return xxx_messageInfo_Cultures.Size(m)
}
func (m *Cultures) XXX_DiscardUnknown() {
	xxx_messageInfo_Cultures.DiscardUnknown(m)
}

var xxx_messageInfo_Cultures proto.InternalMessageInfo

func (m *Cultures) GetCultures() []*Culture {
	if m != nil {
		return m.Cultures
	}
	return nil
}

func (m *Cultures) GetNextPageToken() int32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

// GetCultureRequest is request to retrieve a culture resource
type GetCultureRequest struct {
	CultureId            string   `protobuf:"bytes,1,opt,name=culture_id,json=cultureId,proto3" json:"culture_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCultureRequest) Reset()         { *m = GetCultureRequest{} }
func (m *GetCultureRequest) String() string { return proto.CompactTextString(m) }
func (*GetCultureRequest) ProtoMessage()    {}
func (*GetCultureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f015e82c8f4873ba, []int{12}
}

func (m *GetCultureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCultureRequest.Unmarshal(m, b)
}
func (m *GetCultureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCultureRequest.Marshal(b, m, deterministic)
}
func (m *GetCultureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCultureRequest.Merge(m, src)
}
func (m *GetCultureRequest) XXX_Size() int {
	return xxx_messageInfo_GetCultureRequest.Size(m)
}
func (m *GetCultureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCultureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCultureRequest proto.InternalMessageInfo

func (m *GetCultureRequest) GetCultureId() string {
	if m != nil {
		return m.CultureId
	}
	return ""
}

func init() {
	proto.RegisterEnum("antibug.culture.Label", Label_name, Label_value)
	proto.RegisterEnum("antibug.culture.TestMethod", TestMethod_name, TestMethod_value)
	proto.RegisterEnum("antibug.culture.ListTarget", ListTarget_name, ListTarget_value)
	proto.RegisterType((*Culture)(nil), "antibug.culture.Culture")
	proto.RegisterType((*Pathogen)(nil), "antibug.culture.Pathogen")
	proto.RegisterType((*Antimicrobial)(nil), "antibug.culture.Antimicrobial")
	proto.RegisterType((*LabTestResult)(nil), "antibug.culture.LabTestResult")
	proto.RegisterType((*CreateCultureRequest)(nil), "antibug.culture.CreateCultureRequest")
	proto.RegisterType((*CreateCultureResponse)(nil), "antibug.culture.CreateCultureResponse")
	proto.RegisterType((*UpdateCultureRequest)(nil), "antibug.culture.UpdateCultureRequest")
	proto.RegisterType((*DeleteCultureRequest)(nil), "antibug.culture.DeleteCultureRequest")
	proto.RegisterType((*DateFilter)(nil), "antibug.culture.DateFilter")
	proto.RegisterType((*ListCultureFilter)(nil), "antibug.culture.ListCultureFilter")
	proto.RegisterType((*ListCulturesRequest)(nil), "antibug.culture.ListCulturesRequest")
	proto.RegisterType((*Cultures)(nil), "antibug.culture.Cultures")
	proto.RegisterType((*GetCultureRequest)(nil), "antibug.culture.GetCultureRequest")
}

func init() { proto.RegisterFile("culture.proto", fileDescriptor_f015e82c8f4873ba) }

var fileDescriptor_f015e82c8f4873ba = []byte{
	// 1539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x57, 0x4f, 0x73, 0xdb, 0xc6,
	0x15, 0x37, 0x48, 0xfd, 0x7d, 0x14, 0x45, 0x6a, 0x25, 0x7b, 0x58, 0xb9, 0x4e, 0x11, 0x38, 0x4e,
	0x14, 0x26, 0x22, 0x1d, 0xc6, 0xed, 0x4c, 0x5d, 0x1f, 0x4a, 0x91, 0xb4, 0x83, 0x96, 0xa1, 0x54,
	0x90, 0x3a, 0xa4, 0x17, 0x14, 0x04, 0x9e, 0x40, 0x24, 0x20, 0x16, 0xc5, 0x2e, 0x12, 0xcb, 0x1d,
	0xcf, 0x74, 0x7a, 0xe8, 0x4c, 0xa7, 0xd3, 0x1e, 0xda, 0x5b, 0xbe, 0x43, 0xfb, 0x01, 0x7a, 0xee,
	0x37, 0xe8, 0x57, 0xe8, 0xbd, 0x5f, 0xa1, 0xb3, 0x8b, 0x85, 0x48, 0x8a, 0x94, 0x65, 0x9f, 0x44,
	0xfc, 0xde, 0x6f, 0xf7, 0xfd, 0xde, 0xdb, 0xf7, 0xde, 0xae, 0xa0, 0xec, 0xa6, 0x21, 0x4f, 0x13,
	0x6c, 0xc4, 0x09, 0xe5, 0x94, 0x54, 0x9c, 0x88, 0x07, 0xe3, 0xd4, 0x6f, 0x28, 0xf8, 0xf0, 0xbe,
	0x4f, 0xa9, 0x1f, 0x62, 0x53, 0x9a, 0xc7, 0xe9, 0x45, 0x13, 0xa7, 0x31, 0xbf, 0xcc, 0xd8, 0x87,
	0x3f, 0x54, 0x46, 0x27, 0x0e, 0x9a, 0x4e, 0x14, 0x51, 0xee, 0xf0, 0x80, 0x46, 0x4c, 0x59, 0x3f,
	0x95, 0x7f, 0xdc, 0x63, 0x1f, 0xa3, 0x63, 0xf6, 0x9d, 0xe3, 0xfb, 0x98, 0x34, 0x69, 0x2c, 0x19,
	0xcb, 0x6c, 0xe3, 0x7f, 0x6b, 0xb0, 0xd9, 0xc9, 0x9c, 0x92, 0x07, 0x00, 0xca, 0xbf, 0x1d, 0x78,
	0x35, 0x4d, 0xd7, 0x8e, 0xb6, 0xad, 0x6d, 0x85, 0x98, 0x1e, 0x79, 0x0f, 0x4a, 0xa1, 0x33, 0xb6,
	0x39, 0xba, 0x13, 0x61, 0x2f, 0x64, 0xf6, 0xd0, 0x19, 0x8f, 0xd0, 0x9d, 0x98, 0x1e, 0xf9, 0x11,
	0x94, 0x26, 0x94, 0xc5, 0x01, 0x77, 0x42, 0x61, 0x2f, 0x4a, 0x3b, 0xe4, 0x50, 0x46, 0x70, 0x69,
	0x1a, 0xf1, 0x4b, 0xdb, 0xa5, 0x1e, 0xd6, 0xd6, 0x32, 0x42, 0x06, 0x75, 0xa8, 0x87, 0xe4, 0x43,
	0xa8, 0xb0, 0x74, 0x6c, 0xcf, 0x93, 0xd6, 0x25, 0xa9, 0xcc, 0xd2, 0x71, 0x67, 0xc6, 0x7b, 0x00,
	0x10, 0x3b, 0x3c, 0xc0, 0x88, 0x0b, 0x47, 0x1b, 0x99, 0x10, 0x85, 0x98, 0x1e, 0x79, 0x04, 0xbb,
	0xb9, 0xd9, 0xc7, 0xc8, 0xc3, 0xa4, 0xb6, 0x99, 0xed, 0xa2, 0xd0, 0x17, 0x12, 0x14, 0x72, 0x72,
	0x9a, 0xe3, 0x63, 0x6d, 0x4b, 0xd7, 0x8e, 0xd6, 0xad, 0x7c, 0xe3, 0xb6, 0x8f, 0xa4, 0x06, 0x9b,
	0xe8, 0x05, 0x9c, 0x26, 0xac, 0xb6, 0xad, 0x17, 0x8f, 0xb6, 0xad, 0xfc, 0x93, 0x3c, 0x83, 0x12,
	0x47, 0xc6, 0xed, 0x29, 0xf2, 0x09, 0xf5, 0x6a, 0xa0, 0x6b, 0x47, 0xbb, 0xad, 0xfb, 0x8d, 0x6b,
	0xa7, 0xd8, 0x18, 0x21, 0xe3, 0x5f, 0x4a, 0x8a, 0x05, 0xfc, 0xea, 0xb7, 0xd0, 0x97, 0xe7, 0x99,
	0xd1, 0x34, 0x71, 0xb1, 0x56, 0xca, 0xf4, 0x29, 0x74, 0x28, 0x41, 0xf2, 0x11, 0x54, 0x62, 0x87,
	0x4f, 0xa8, 0x8f, 0x11, 0xb3, 0x2f, 0x68, 0x1a, 0x79, 0xb5, 0x1d, 0x29, 0x63, 0xf7, 0x0a, 0x7e,
	0x2e, 0x50, 0xd2, 0x84, 0x7d, 0xe1, 0x79, 0x1a, 0xb8, 0x09, 0x1d, 0x07, 0x4e, 0xc8, 0xec, 0x94,
	0xa1, 0x57, 0x2b, 0x4b, 0x32, 0x59, 0x34, 0x9d, 0x33, 0xf4, 0xc8, 0x0b, 0xa8, 0xe4, 0x02, 0x12,
	0x64, 0x69, 0xc8, 0x59, 0x6d, 0x57, 0x2f, 0x1e, 0x95, 0x5a, 0xef, 0x2d, 0x85, 0xd0, 0x17, 0xc7,
	0xcb, 0xb8, 0x25, 0x69, 0x56, 0xae, 0x3b, 0xfb, 0x64, 0xa4, 0x05, 0x77, 0xd5, 0x06, 0x36, 0x0f,
	0xa6, 0xc8, 0xb8, 0x33, 0x8d, 0x6d, 0x86, 0x6e, 0xad, 0xa2, 0x6b, 0x47, 0x45, 0x6b, 0x5f, 0x19,
	0x47, 0xb9, 0x6d, 0x88, 0xae, 0xf1, 0x1a, 0xb6, 0xce, 0x94, 0x7e, 0x75, 0x04, 0xf2, 0xf7, 0xac,
	0xe4, 0x20, 0x87, 0x4c, 0x8f, 0x3c, 0x84, 0xf2, 0x15, 0x21, 0x72, 0xa6, 0xa8, 0xaa, 0x6e, 0x27,
	0x07, 0x07, 0xce, 0x14, 0xc9, 0x27, 0xb0, 0x77, 0x45, 0x72, 0x1d, 0x8e, 0x3e, 0x4d, 0x2e, 0x55,
	0xf9, 0x55, 0x73, 0x43, 0x47, 0xe1, 0xc6, 0xf7, 0x1a, 0x94, 0xdb, 0xf3, 0x29, 0x21, 0x1f, 0x43,
	0x75, 0x21, 0x47, 0x33, 0x25, 0x95, 0x05, 0xdc, 0xf4, 0xc8, 0x31, 0x2c, 0xa6, 0x73, 0x5e, 0xd3,
	0xde, 0x82, 0x45, 0x0a, 0xbb, 0x7e, 0x30, 0xb6, 0x1b, 0x3a, 0x8c, 0x29, 0x69, 0x8b, 0x3b, 0x75,
	0x84, 0xc5, 0xf8, 0x6b, 0x11, 0xca, 0x0b, 0x19, 0x5f, 0x4e, 0x80, 0xb6, 0x22, 0x01, 0xd7, 0xd2,
	0x58, 0x58, 0x4a, 0xe3, 0xaa, 0x10, 0x8b, 0xef, 0x12, 0xe2, 0xda, 0x4d, 0x21, 0x3e, 0x84, 0xb2,
	0x17, 0xb0, 0x6f, 0x6c, 0x2f, 0x70, 0xa6, 0xc8, 0x31, 0x51, 0x0d, 0xbb, 0x23, 0xc0, 0xae, 0xc2,
	0xc8, 0x63, 0x38, 0x88, 0x68, 0x64, 0x7b, 0xc1, 0xc5, 0x45, 0xca, 0x02, 0x1a, 0xa9, 0xaa, 0x53,
	0x9d, 0x4b, 0x22, 0x1a, 0x75, 0x73, 0x93, 0x0a, 0xfb, 0x11, 0xec, 0x66, 0x1c, 0xdb, 0xa5, 0xd3,
	0x29, 0x46, 0x3c, 0x6f, 0xe1, 0x0c, 0xed, 0x64, 0x20, 0xf9, 0x0c, 0x0e, 0x58, 0xca, 0x5c, 0x8c,
	0x79, 0x30, 0x0e, 0xc2, 0x80, 0x5f, 0xda, 0xcc, 0xa5, 0x49, 0xd6, 0xcb, 0x05, 0x6b, 0x7f, 0xd1,
	0x36, 0x14, 0x26, 0xf2, 0x29, 0xac, 0x87, 0xce, 0x18, 0xc3, 0xda, 0xb6, 0x6c, 0xda, 0x7b, 0xab,
	0x2a, 0x1e, 0x43, 0x2b, 0x23, 0x19, 0xbf, 0x80, 0x83, 0x4e, 0x82, 0x0e, 0xc7, 0x4e, 0x5e, 0xf8,
	0xbf, 0x4d, 0x91, 0x71, 0xd2, 0x82, 0x4d, 0xc5, 0x97, 0x07, 0x52, 0x6a, 0xd5, 0x96, 0xf6, 0xc9,
	0x57, 0xe4, 0x44, 0xe3, 0x27, 0x70, 0xf7, 0xda, 0x5e, 0x2c, 0xa6, 0x11, 0xbb, 0x6d, 0xee, 0x1a,
	0x7f, 0xd4, 0xe0, 0xe0, 0x3c, 0xf6, 0x96, 0x45, 0xdc, 0x32, 0xaf, 0xef, 0xc3, 0x76, 0x36, 0xaf,
	0x66, 0x35, 0xb1, 0x95, 0x01, 0xa6, 0x37, 0x1f, 0x40, 0xf1, 0x6d, 0x03, 0xf8, 0x31, 0x1c, 0x74,
	0x31, 0xc4, 0x77, 0xd4, 0x61, 0xfc, 0x5e, 0x03, 0xe8, 0x3a, 0x1c, 0x9f, 0x07, 0xa1, 0x28, 0x86,
	0x06, 0xec, 0x33, 0xee, 0x24, 0xfc, 0xda, 0xc4, 0xd0, 0xe4, 0xc4, 0xd8, 0x93, 0xa6, 0xf9, 0x79,
	0x41, 0xea, 0xb0, 0x87, 0x91, 0x77, 0x8d, 0x5d, 0x90, 0xec, 0x0a, 0x46, 0xde, 0x02, 0xf7, 0x1e,
	0x6c, 0x5c, 0x48, 0x2f, 0x32, 0xa8, 0x2d, 0x4b, 0x7d, 0x19, 0xff, 0xd4, 0x60, 0xaf, 0x1f, 0x30,
	0xae, 0x84, 0x2b, 0x25, 0xcf, 0xa0, 0x24, 0xb2, 0x6a, 0xab, 0x25, 0xd9, 0x41, 0x2e, 0x4f, 0xf1,
	0x99, 0x76, 0x0b, 0xbc, 0x59, 0x1c, 0xcf, 0xa0, 0x14, 0x06, 0x8c, 0xdb, 0xdc, 0x49, 0x7c, 0xe4,
	0x52, 0xd1, 0xaa, 0x3b, 0x40, 0xb8, 0x1d, 0x49, 0x8a, 0x05, 0xe1, 0xd5, 0x6f, 0x91, 0xb3, 0x6c,
	0xa1, 0x1d, 0x78, 0x62, 0x22, 0x88, 0x51, 0xbd, 0x9d, 0x21, 0xa6, 0xc7, 0x8c, 0xbf, 0x68, 0xb0,
	0x3f, 0x27, 0x98, 0xcd, 0xa5, 0x3a, 0x76, 0x7c, 0xb4, 0x39, 0xfd, 0x06, 0x23, 0xa9, 0x78, 0x5d,
	0xdc, 0x7c, 0x3e, 0x8e, 0x04, 0x20, 0x8e, 0x5c, 0x9a, 0x59, 0xf0, 0x2a, 0x1b, 0x4b, 0xeb, 0xd6,
	0x96, 0x00, 0x86, 0xc1, 0x2b, 0x24, 0x4f, 0x17, 0x92, 0x53, 0x6a, 0x19, 0x2b, 0xb5, 0x2e, 0xa4,
	0xe8, 0x2a, 0x81, 0x13, 0xd8, 0xca, 0xa5, 0x90, 0x27, 0xb0, 0xa5, 0x16, 0xb0, 0x9a, 0x26, 0xaf,
	0x8d, 0x9b, 0x6b, 0xe7, 0x8a, 0x29, 0xee, 0xf6, 0x08, 0x5f, 0x72, 0x7b, 0x4e, 0x7e, 0x26, 0xb0,
	0x2c, 0xe0, 0xb3, 0x3c, 0x04, 0xa3, 0x05, 0x7b, 0x2f, 0x90, 0xbf, 0x53, 0x85, 0xd5, 0x4f, 0x61,
	0x5d, 0x76, 0x2d, 0xa9, 0x40, 0x69, 0x78, 0x3e, 0xec, 0xf4, 0xce, 0x46, 0xe6, 0x49, 0xbf, 0x57,
	0xbd, 0x43, 0x0e, 0xa0, 0xda, 0x3d, 0x1d, 0xf6, 0xec, 0x79, 0xb4, 0x40, 0xaa, 0xb0, 0x63, 0x0e,
	0x46, 0x3d, 0xeb, 0xcb, 0x5e, 0xd7, 0x6c, 0x8f, 0x7a, 0xd5, 0x22, 0x29, 0xc3, 0xb6, 0xd5, 0x1b,
	0x9a, 0xc3, 0x51, 0x7b, 0x30, 0xaa, 0xae, 0xd5, 0x75, 0x80, 0xd9, 0xdd, 0x4d, 0x08, 0xec, 0x76,
	0xcd, 0xe1, 0x2f, 0xed, 0xae, 0xf9, 0xfc, 0xf9, 0xf9, 0xd0, 0x3c, 0x1d, 0x54, 0xef, 0xd4, 0x7f,
	0x03, 0x30, 0x3b, 0x59, 0xb2, 0x09, 0xc5, 0x76, 0xbf, 0x5f, 0xbd, 0x43, 0x00, 0x36, 0x3a, 0xa7,
	0xe7, 0x83, 0xd1, 0x57, 0x55, 0x8d, 0xec, 0x02, 0x0c, 0xcf, 0x4f, 0x6c, 0xf5, 0x5d, 0x20, 0x3b,
	0xb0, 0xf5, 0xc5, 0xe9, 0xf0, 0xcc, 0x1c, 0xb5, 0xfb, 0xd5, 0x22, 0x29, 0xc1, 0xe6, 0x59, 0x7b,
	0x64, 0xf6, 0x84, 0x3f, 0xe1, 0xa1, 0xdf, 0x3e, 0xb1, 0x47, 0xbd, 0xce, 0x17, 0x03, 0xb3, 0x63,
	0xb6, 0x07, 0xd5, 0xf5, 0xd6, 0x9f, 0xd6, 0x01, 0x54, 0x1a, 0xda, 0x67, 0x26, 0xf9, 0xb3, 0x06,
	0xe5, 0x85, 0xf1, 0x41, 0x1e, 0x2d, 0x67, 0x7d, 0xc5, 0xa8, 0x3a, 0xfc, 0xf0, 0x36, 0x5a, 0x36,
	0x85, 0x8c, 0x4f, 0xfe, 0xf0, 0x9f, 0xff, 0xfe, 0xbd, 0xf0, 0xc8, 0xd0, 0xd5, 0xbb, 0x52, 0xae,
	0x69, 0xe6, 0xe7, 0xd7, 0x74, 0x5c, 0xf1, 0x6c, 0x6c, 0x3a, 0x9e, 0xf7, 0x54, 0xab, 0x93, 0xd7,
	0x50, 0x5e, 0x18, 0x49, 0x2b, 0xc4, 0xac, 0x1a, 0x59, 0x87, 0xf7, 0x1a, 0xd9, 0xdb, 0xb5, 0x91,
	0x3f, 0x6c, 0x1b, 0x3d, 0xf1, 0xb0, 0x35, 0x8e, 0xa5, 0xf3, 0x8f, 0x5a, 0xc6, 0x6a, 0xe7, 0xbf,
	0x9b, 0x9d, 0xfe, 0x6b, 0xe1, 0xfe, 0x15, 0x94, 0x17, 0x26, 0xd1, 0x0a, 0xf7, 0xab, 0x26, 0xd5,
	0x8d, 0xee, 0xeb, 0xd2, 0xfd, 0x07, 0xf5, 0xb7, 0x70, 0x4f, 0x5e, 0xc1, 0xce, 0x7c, 0x67, 0x92,
	0x0f, 0xde, 0xd4, 0x46, 0x79, 0xe3, 0x1e, 0xfe, 0xe0, 0xa6, 0x16, 0x61, 0xc6, 0xc7, 0xd2, 0xf9,
	0x43, 0xf2, 0xfe, 0x1b, 0x13, 0x2f, 0x66, 0x07, 0xf9, 0x16, 0x60, 0xd6, 0x1c, 0x64, 0xb9, 0x81,
	0x97, 0x3a, 0xe7, 0xf0, 0xc6, 0xd6, 0xcc, 0x63, 0x26, 0x6f, 0x11, 0xf3, 0xc9, 0xbf, 0x0a, 0x7f,
	0x6b, 0xff, 0xa3, 0x40, 0xfe, 0xad, 0x41, 0x45, 0x2d, 0xd7, 0x87, 0x98, 0x7c, 0x1b, 0xb8, 0x68,
	0x7c, 0x05, 0x0f, 0x72, 0xa8, 0x7d, 0x66, 0xea, 0xc7, 0xba, 0xda, 0x49, 0x8f, 0x13, 0xfa, 0x35,
	0xba, 0x9c, 0xbc, 0x3f, 0xe1, 0x3c, 0x66, 0x4f, 0x9b, 0x4d, 0x3f, 0xe0, 0x93, 0x74, 0xdc, 0x70,
	0xe9, 0xb4, 0xe9, 0x07, 0xde, 0xa5, 0x28, 0xa6, 0x8c, 0x7a, 0x78, 0xd7, 0x0f, 0x3c, 0xa4, 0xd1,
	0xc4, 0x71, 0x31, 0xf9, 0xb9, 0x3f, 0x75, 0x82, 0x50, 0xb0, 0xea, 0xbf, 0x82, 0x83, 0x93, 0x61,
	0x57, 0xff, 0xfc, 0xb8, 0x13, 0x3a, 0x29, 0x43, 0xbd, 0x1f, 0xb8, 0x28, 0xee, 0xcb, 0x9f, 0xde,
	0xba, 0x63, 0x73, 0x1c, 0xd2, 0x71, 0x73, 0xea, 0x30, 0x8e, 0x49, 0xb3, 0x6f, 0x76, 0x7a, 0x83,
	0x61, 0xaf, 0xc1, 0x5f, 0xf2, 0x56, 0xf1, 0xb3, 0xc6, 0xe3, 0x7a, 0x51, 0x2b, 0xac, 0xb5, 0xaa,
	0x4e, 0x1c, 0x87, 0x81, 0x2b, 0xff, 0x19, 0x6a, 0x7e, 0xcd, 0x68, 0xf4, 0x74, 0x09, 0xb1, 0x7e,
	0x06, 0xc5, 0x27, 0x8f, 0x9f, 0x90, 0x27, 0x50, 0xb7, 0x90, 0xa7, 0x49, 0x84, 0x9e, 0xfe, 0xdd,
	0x04, 0x23, 0x9d, 0x4f, 0x50, 0x4f, 0x30, 0x7b, 0xbb, 0xeb, 0x1e, 0x45, 0xa6, 0x47, 0x94, 0xeb,
	0xf8, 0x32, 0x60, 0xbc, 0x41, 0x36, 0x60, 0xed, 0xfb, 0x82, 0xb6, 0xf1, 0xeb, 0xfc, 0xda, 0x1c,
	0x6f, 0xc8, 0x62, 0xfb, 0xfc, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x4d, 0x24, 0xd5, 0xf4,
	0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CultureAPIClient is the client API for CultureAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CultureAPIClient interface {
	// Uploads a culture resource to be stored
	CreateCulture(ctx context.Context, in *CreateCultureRequest, opts ...grpc.CallOption) (*CreateCultureResponse, error)
	// Update an existing culture resource on the database
	UpdateCulture(ctx context.Context, in *UpdateCultureRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Removes a culture resource on the database completely
	DeleteCulture(ctx context.Context, in *DeleteCultureRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Retrieves a collection of culture resource
	ListCultures(ctx context.Context, in *ListCulturesRequest, opts ...grpc.CallOption) (*Cultures, error)
	// Retrieves a culture resource from the database
	GetCulture(ctx context.Context, in *GetCultureRequest, opts ...grpc.CallOption) (*Culture, error)
}

type cultureAPIClient struct {
	cc *grpc.ClientConn
}

func NewCultureAPIClient(cc *grpc.ClientConn) CultureAPIClient {
	return &cultureAPIClient{cc}
}

func (c *cultureAPIClient) CreateCulture(ctx context.Context, in *CreateCultureRequest, opts ...grpc.CallOption) (*CreateCultureResponse, error) {
	out := new(CreateCultureResponse)
	err := c.cc.Invoke(ctx, "/antibug.culture.CultureAPI/CreateCulture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cultureAPIClient) UpdateCulture(ctx context.Context, in *UpdateCultureRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/antibug.culture.CultureAPI/UpdateCulture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cultureAPIClient) DeleteCulture(ctx context.Context, in *DeleteCultureRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/antibug.culture.CultureAPI/DeleteCulture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cultureAPIClient) ListCultures(ctx context.Context, in *ListCulturesRequest, opts ...grpc.CallOption) (*Cultures, error) {
	out := new(Cultures)
	err := c.cc.Invoke(ctx, "/antibug.culture.CultureAPI/ListCultures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cultureAPIClient) GetCulture(ctx context.Context, in *GetCultureRequest, opts ...grpc.CallOption) (*Culture, error) {
	out := new(Culture)
	err := c.cc.Invoke(ctx, "/antibug.culture.CultureAPI/GetCulture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CultureAPIServer is the server API for CultureAPI service.
type CultureAPIServer interface {
	// Uploads a culture resource to be stored
	CreateCulture(context.Context, *CreateCultureRequest) (*CreateCultureResponse, error)
	// Update an existing culture resource on the database
	UpdateCulture(context.Context, *UpdateCultureRequest) (*empty.Empty, error)
	// Removes a culture resource on the database completely
	DeleteCulture(context.Context, *DeleteCultureRequest) (*empty.Empty, error)
	// Retrieves a collection of culture resource
	ListCultures(context.Context, *ListCulturesRequest) (*Cultures, error)
	// Retrieves a culture resource from the database
	GetCulture(context.Context, *GetCultureRequest) (*Culture, error)
}

func RegisterCultureAPIServer(s *grpc.Server, srv CultureAPIServer) {
	s.RegisterService(&_CultureAPI_serviceDesc, srv)
}

func _CultureAPI_CreateCulture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCultureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CultureAPIServer).CreateCulture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.culture.CultureAPI/CreateCulture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CultureAPIServer).CreateCulture(ctx, req.(*CreateCultureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CultureAPI_UpdateCulture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCultureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CultureAPIServer).UpdateCulture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.culture.CultureAPI/UpdateCulture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CultureAPIServer).UpdateCulture(ctx, req.(*UpdateCultureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CultureAPI_DeleteCulture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCultureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CultureAPIServer).DeleteCulture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.culture.CultureAPI/DeleteCulture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CultureAPIServer).DeleteCulture(ctx, req.(*DeleteCultureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CultureAPI_ListCultures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCulturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CultureAPIServer).ListCultures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.culture.CultureAPI/ListCultures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CultureAPIServer).ListCultures(ctx, req.(*ListCulturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CultureAPI_GetCulture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCultureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CultureAPIServer).GetCulture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.culture.CultureAPI/GetCulture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CultureAPIServer).GetCulture(ctx, req.(*GetCultureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CultureAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "antibug.culture.CultureAPI",
	HandlerType: (*CultureAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCulture",
			Handler:    _CultureAPI_CreateCulture_Handler,
		},
		{
			MethodName: "UpdateCulture",
			Handler:    _CultureAPI_UpdateCulture_Handler,
		},
		{
			MethodName: "DeleteCulture",
			Handler:    _CultureAPI_DeleteCulture_Handler,
		},
		{
			MethodName: "ListCultures",
			Handler:    _CultureAPI_ListCultures_Handler,
		},
		{
			MethodName: "GetCulture",
			Handler:    _CultureAPI_GetCulture_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "culture.proto",
}
