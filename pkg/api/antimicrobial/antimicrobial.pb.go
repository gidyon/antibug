// Code generated by protoc-gen-go. DO NOT EDIT.
// source: antimicrobial.proto

package antimicrobial

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// View of an antimicrobial resource
type AntimicrobialView int32

const (
	// Full information about the resource
	AntimicrobialView_FULL AntimicrobialView = 0
	// Server response include antimicrobial_id, antimicrobial_name and general_usage
	AntimicrobialView_LIST AntimicrobialView = 1
)

var AntimicrobialView_name = map[int32]string{
	0: "FULL",
	1: "LIST",
}

var AntimicrobialView_value = map[string]int32{
	"FULL": 0,
	"LIST": 1,
}

func (x AntimicrobialView) String() string {
	return proto.EnumName(AntimicrobialView_name, int32(x))
}

func (AntimicrobialView) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{0}
}

// Antimicrobial is a biological compound that acts against a microbe
type Antimicrobial struct {
	AntimicrobialId       int64               `protobuf:"varint,1,opt,name=antimicrobial_id,json=antimicrobialId,proto3" json:"antimicrobial_id,omitempty"`
	AntimicrobialName     string              `protobuf:"bytes,2,opt,name=antimicrobial_name,json=antimicrobialName,proto3" json:"antimicrobial_name,omitempty"`
	CDiff                 string              `protobuf:"bytes,3,opt,name=c_diff,json=cDiff,proto3" json:"c_diff,omitempty"`
	OralBioavailability   string              `protobuf:"bytes,4,opt,name=oral_bioavailability,json=oralBioavailability,proto3" json:"oral_bioavailability,omitempty"`
	ApproximateCost       string              `protobuf:"bytes,5,opt,name=approximate_cost,json=approximateCost,proto3" json:"approximate_cost,omitempty"`
	GeneralUsage          *RepeatedString     `protobuf:"bytes,6,opt,name=general_usage,json=generalUsage,proto3" json:"general_usage,omitempty"`
	DrugMonitoring        *RepeatedString     `protobuf:"bytes,7,opt,name=drug_monitoring,json=drugMonitoring,proto3" json:"drug_monitoring,omitempty"`
	AdverseEffects        *RepeatedString     `protobuf:"bytes,8,opt,name=adverse_effects,json=adverseEffects,proto3" json:"adverse_effects,omitempty"`
	MajorInteractions     *RepeatedString     `protobuf:"bytes,9,opt,name=major_interactions,json=majorInteractions,proto3" json:"major_interactions,omitempty"`
	Pharmacology          *Pharmacology       `protobuf:"bytes,10,opt,name=pharmacology,proto3" json:"pharmacology,omitempty"`
	AdditionalInformation *RepeatedString     `protobuf:"bytes,11,opt,name=additional_information,json=additionalInformation,proto3" json:"additional_information,omitempty"`
	ActivitySpectrum      *SpectrumOfActivity `protobuf:"bytes,12,opt,name=activity_spectrum,json=activitySpectrum,proto3" json:"activity_spectrum,omitempty"`
	Editors               *RepeatedString     `protobuf:"bytes,13,opt,name=editors,proto3" json:"editors,omitempty"`
	UpdateTimeSec         int64               `protobuf:"varint,14,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *Antimicrobial) Reset()         { *m = Antimicrobial{} }
func (m *Antimicrobial) String() string { return proto.CompactTextString(m) }
func (*Antimicrobial) ProtoMessage()    {}
func (*Antimicrobial) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{0}
}

func (m *Antimicrobial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Antimicrobial.Unmarshal(m, b)
}
func (m *Antimicrobial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Antimicrobial.Marshal(b, m, deterministic)
}
func (m *Antimicrobial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Antimicrobial.Merge(m, src)
}
func (m *Antimicrobial) XXX_Size() int {
	return xxx_messageInfo_Antimicrobial.Size(m)
}
func (m *Antimicrobial) XXX_DiscardUnknown() {
	xxx_messageInfo_Antimicrobial.DiscardUnknown(m)
}

var xxx_messageInfo_Antimicrobial proto.InternalMessageInfo

func (m *Antimicrobial) GetAntimicrobialId() int64 {
	if m != nil {
		return m.AntimicrobialId
	}
	return 0
}

func (m *Antimicrobial) GetAntimicrobialName() string {
	if m != nil {
		return m.AntimicrobialName
	}
	return ""
}

func (m *Antimicrobial) GetCDiff() string {
	if m != nil {
		return m.CDiff
	}
	return ""
}

func (m *Antimicrobial) GetOralBioavailability() string {
	if m != nil {
		return m.OralBioavailability
	}
	return ""
}

func (m *Antimicrobial) GetApproximateCost() string {
	if m != nil {
		return m.ApproximateCost
	}
	return ""
}

func (m *Antimicrobial) GetGeneralUsage() *RepeatedString {
	if m != nil {
		return m.GeneralUsage
	}
	return nil
}

func (m *Antimicrobial) GetDrugMonitoring() *RepeatedString {
	if m != nil {
		return m.DrugMonitoring
	}
	return nil
}

func (m *Antimicrobial) GetAdverseEffects() *RepeatedString {
	if m != nil {
		return m.AdverseEffects
	}
	return nil
}

func (m *Antimicrobial) GetMajorInteractions() *RepeatedString {
	if m != nil {
		return m.MajorInteractions
	}
	return nil
}

func (m *Antimicrobial) GetPharmacology() *Pharmacology {
	if m != nil {
		return m.Pharmacology
	}
	return nil
}

func (m *Antimicrobial) GetAdditionalInformation() *RepeatedString {
	if m != nil {
		return m.AdditionalInformation
	}
	return nil
}

func (m *Antimicrobial) GetActivitySpectrum() *SpectrumOfActivity {
	if m != nil {
		return m.ActivitySpectrum
	}
	return nil
}

func (m *Antimicrobial) GetEditors() *RepeatedString {
	if m != nil {
		return m.Editors
	}
	return nil
}

func (m *Antimicrobial) GetUpdateTimeSec() int64 {
	if m != nil {
		return m.UpdateTimeSec
	}
	return 0
}

// RepeatedString contains repeated string
type RepeatedString struct {
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepeatedString) Reset()         { *m = RepeatedString{} }
func (m *RepeatedString) String() string { return proto.CompactTextString(m) }
func (*RepeatedString) ProtoMessage()    {}
func (*RepeatedString) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{1}
}

func (m *RepeatedString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatedString.Unmarshal(m, b)
}
func (m *RepeatedString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatedString.Marshal(b, m, deterministic)
}
func (m *RepeatedString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatedString.Merge(m, src)
}
func (m *RepeatedString) XXX_Size() int {
	return xxx_messageInfo_RepeatedString.Size(m)
}
func (m *RepeatedString) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatedString.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatedString proto.InternalMessageInfo

func (m *RepeatedString) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// PharmacologyInfo contains key value pharmacological information
type PharmacologyInfo struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PharmacologyInfo) Reset()         { *m = PharmacologyInfo{} }
func (m *PharmacologyInfo) String() string { return proto.CompactTextString(m) }
func (*PharmacologyInfo) ProtoMessage()    {}
func (*PharmacologyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{2}
}

func (m *PharmacologyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PharmacologyInfo.Unmarshal(m, b)
}
func (m *PharmacologyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PharmacologyInfo.Marshal(b, m, deterministic)
}
func (m *PharmacologyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PharmacologyInfo.Merge(m, src)
}
func (m *PharmacologyInfo) XXX_Size() int {
	return xxx_messageInfo_PharmacologyInfo.Size(m)
}
func (m *PharmacologyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PharmacologyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PharmacologyInfo proto.InternalMessageInfo

func (m *PharmacologyInfo) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PharmacologyInfo) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Pharmacology contains pharmacological information for an antimicrobial
type Pharmacology struct {
	PharmacologyInfos    []*PharmacologyInfo `protobuf:"bytes,1,rep,name=pharmacology_infos,json=pharmacologyInfos,proto3" json:"pharmacology_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Pharmacology) Reset()         { *m = Pharmacology{} }
func (m *Pharmacology) String() string { return proto.CompactTextString(m) }
func (*Pharmacology) ProtoMessage()    {}
func (*Pharmacology) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{3}
}

func (m *Pharmacology) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pharmacology.Unmarshal(m, b)
}
func (m *Pharmacology) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pharmacology.Marshal(b, m, deterministic)
}
func (m *Pharmacology) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pharmacology.Merge(m, src)
}
func (m *Pharmacology) XXX_Size() int {
	return xxx_messageInfo_Pharmacology.Size(m)
}
func (m *Pharmacology) XXX_DiscardUnknown() {
	xxx_messageInfo_Pharmacology.DiscardUnknown(m)
}

var xxx_messageInfo_Pharmacology proto.InternalMessageInfo

func (m *Pharmacology) GetPharmacologyInfos() []*PharmacologyInfo {
	if m != nil {
		return m.PharmacologyInfos
	}
	return nil
}

// MicrobesInfo is basic name and id for a pathogen
type MicrobesInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MicrobesInfo) Reset()         { *m = MicrobesInfo{} }
func (m *MicrobesInfo) String() string { return proto.CompactTextString(m) }
func (*MicrobesInfo) ProtoMessage()    {}
func (*MicrobesInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{4}
}

func (m *MicrobesInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MicrobesInfo.Unmarshal(m, b)
}
func (m *MicrobesInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MicrobesInfo.Marshal(b, m, deterministic)
}
func (m *MicrobesInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MicrobesInfo.Merge(m, src)
}
func (m *MicrobesInfo) XXX_Size() int {
	return xxx_messageInfo_MicrobesInfo.Size(m)
}
func (m *MicrobesInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MicrobesInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MicrobesInfo proto.InternalMessageInfo

func (m *MicrobesInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MicrobesInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Spectrum is single spectrum of activity
type Spectrum struct {
	Group                string          `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Microbes             []*MicrobesInfo `protobuf:"bytes,2,rep,name=microbes,proto3" json:"microbes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Spectrum) Reset()         { *m = Spectrum{} }
func (m *Spectrum) String() string { return proto.CompactTextString(m) }
func (*Spectrum) ProtoMessage()    {}
func (*Spectrum) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{5}
}

func (m *Spectrum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spectrum.Unmarshal(m, b)
}
func (m *Spectrum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spectrum.Marshal(b, m, deterministic)
}
func (m *Spectrum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spectrum.Merge(m, src)
}
func (m *Spectrum) XXX_Size() int {
	return xxx_messageInfo_Spectrum.Size(m)
}
func (m *Spectrum) XXX_DiscardUnknown() {
	xxx_messageInfo_Spectrum.DiscardUnknown(m)
}

var xxx_messageInfo_Spectrum proto.InternalMessageInfo

func (m *Spectrum) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Spectrum) GetMicrobes() []*MicrobesInfo {
	if m != nil {
		return m.Microbes
	}
	return nil
}

// SpectrumOfActivity shows the action of the antimicrobial against categories of microbes
type SpectrumOfActivity struct {
	Spectrum             []*Spectrum `protobuf:"bytes,1,rep,name=spectrum,proto3" json:"spectrum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SpectrumOfActivity) Reset()         { *m = SpectrumOfActivity{} }
func (m *SpectrumOfActivity) String() string { return proto.CompactTextString(m) }
func (*SpectrumOfActivity) ProtoMessage()    {}
func (*SpectrumOfActivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{6}
}

func (m *SpectrumOfActivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpectrumOfActivity.Unmarshal(m, b)
}
func (m *SpectrumOfActivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpectrumOfActivity.Marshal(b, m, deterministic)
}
func (m *SpectrumOfActivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpectrumOfActivity.Merge(m, src)
}
func (m *SpectrumOfActivity) XXX_Size() int {
	return xxx_messageInfo_SpectrumOfActivity.Size(m)
}
func (m *SpectrumOfActivity) XXX_DiscardUnknown() {
	xxx_messageInfo_SpectrumOfActivity.DiscardUnknown(m)
}

var xxx_messageInfo_SpectrumOfActivity proto.InternalMessageInfo

func (m *SpectrumOfActivity) GetSpectrum() []*Spectrum {
	if m != nil {
		return m.Spectrum
	}
	return nil
}

// Request to create a new antimicrobial agent
type CreateAntimicrobialRequest struct {
	// Antimicrobial resource
	Antimicrobial        *Antimicrobial `protobuf:"bytes,1,opt,name=antimicrobial,proto3" json:"antimicrobial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateAntimicrobialRequest) Reset()         { *m = CreateAntimicrobialRequest{} }
func (m *CreateAntimicrobialRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAntimicrobialRequest) ProtoMessage()    {}
func (*CreateAntimicrobialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{7}
}

func (m *CreateAntimicrobialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAntimicrobialRequest.Unmarshal(m, b)
}
func (m *CreateAntimicrobialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAntimicrobialRequest.Marshal(b, m, deterministic)
}
func (m *CreateAntimicrobialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAntimicrobialRequest.Merge(m, src)
}
func (m *CreateAntimicrobialRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAntimicrobialRequest.Size(m)
}
func (m *CreateAntimicrobialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAntimicrobialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAntimicrobialRequest proto.InternalMessageInfo

func (m *CreateAntimicrobialRequest) GetAntimicrobial() *Antimicrobial {
	if m != nil {
		return m.Antimicrobial
	}
	return nil
}

// Response to creating antimicrobial containing the id of the newly created antimicrobial
type CreateAntimicrobialResponse struct {
	AntimicrobialId      string   `protobuf:"bytes,1,opt,name=antimicrobial_id,json=antimicrobialId,proto3" json:"antimicrobial_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAntimicrobialResponse) Reset()         { *m = CreateAntimicrobialResponse{} }
func (m *CreateAntimicrobialResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAntimicrobialResponse) ProtoMessage()    {}
func (*CreateAntimicrobialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{8}
}

func (m *CreateAntimicrobialResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAntimicrobialResponse.Unmarshal(m, b)
}
func (m *CreateAntimicrobialResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAntimicrobialResponse.Marshal(b, m, deterministic)
}
func (m *CreateAntimicrobialResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAntimicrobialResponse.Merge(m, src)
}
func (m *CreateAntimicrobialResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAntimicrobialResponse.Size(m)
}
func (m *CreateAntimicrobialResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAntimicrobialResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAntimicrobialResponse proto.InternalMessageInfo

func (m *CreateAntimicrobialResponse) GetAntimicrobialId() string {
	if m != nil {
		return m.AntimicrobialId
	}
	return ""
}

// Request to update an antimicrobial agent
type UpdateAntimicrobialRequest struct {
	AntimicrobialId      string         `protobuf:"bytes,1,opt,name=antimicrobial_id,json=antimicrobialId,proto3" json:"antimicrobial_id,omitempty"`
	Antimicrobial        *Antimicrobial `protobuf:"bytes,2,opt,name=antimicrobial,proto3" json:"antimicrobial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateAntimicrobialRequest) Reset()         { *m = UpdateAntimicrobialRequest{} }
func (m *UpdateAntimicrobialRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAntimicrobialRequest) ProtoMessage()    {}
func (*UpdateAntimicrobialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{9}
}

func (m *UpdateAntimicrobialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAntimicrobialRequest.Unmarshal(m, b)
}
func (m *UpdateAntimicrobialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAntimicrobialRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAntimicrobialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAntimicrobialRequest.Merge(m, src)
}
func (m *UpdateAntimicrobialRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAntimicrobialRequest.Size(m)
}
func (m *UpdateAntimicrobialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAntimicrobialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAntimicrobialRequest proto.InternalMessageInfo

func (m *UpdateAntimicrobialRequest) GetAntimicrobialId() string {
	if m != nil {
		return m.AntimicrobialId
	}
	return ""
}

func (m *UpdateAntimicrobialRequest) GetAntimicrobial() *Antimicrobial {
	if m != nil {
		return m.Antimicrobial
	}
	return nil
}

// Request to delete an antimicrobial agent
type DeleteAntimicrobialRequest struct {
	AntimicrobialId      string   `protobuf:"bytes,1,opt,name=antimicrobial_id,json=antimicrobialId,proto3" json:"antimicrobial_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAntimicrobialRequest) Reset()         { *m = DeleteAntimicrobialRequest{} }
func (m *DeleteAntimicrobialRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAntimicrobialRequest) ProtoMessage()    {}
func (*DeleteAntimicrobialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{10}
}

func (m *DeleteAntimicrobialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAntimicrobialRequest.Unmarshal(m, b)
}
func (m *DeleteAntimicrobialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAntimicrobialRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAntimicrobialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAntimicrobialRequest.Merge(m, src)
}
func (m *DeleteAntimicrobialRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAntimicrobialRequest.Size(m)
}
func (m *DeleteAntimicrobialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAntimicrobialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAntimicrobialRequest proto.InternalMessageInfo

func (m *DeleteAntimicrobialRequest) GetAntimicrobialId() string {
	if m != nil {
		return m.AntimicrobialId
	}
	return ""
}

// Request to retrieve a collection antimicrobial agents
type ListAntimicrobialsRequest struct {
	View                 AntimicrobialView `protobuf:"varint,1,opt,name=view,proto3,enum=antibug.antimicrobial.AntimicrobialView" json:"view,omitempty"`
	PageToken            int32             `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32             `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListAntimicrobialsRequest) Reset()         { *m = ListAntimicrobialsRequest{} }
func (m *ListAntimicrobialsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAntimicrobialsRequest) ProtoMessage()    {}
func (*ListAntimicrobialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{11}
}

func (m *ListAntimicrobialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAntimicrobialsRequest.Unmarshal(m, b)
}
func (m *ListAntimicrobialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAntimicrobialsRequest.Marshal(b, m, deterministic)
}
func (m *ListAntimicrobialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAntimicrobialsRequest.Merge(m, src)
}
func (m *ListAntimicrobialsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAntimicrobialsRequest.Size(m)
}
func (m *ListAntimicrobialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAntimicrobialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAntimicrobialsRequest proto.InternalMessageInfo

func (m *ListAntimicrobialsRequest) GetView() AntimicrobialView {
	if m != nil {
		return m.View
	}
	return AntimicrobialView_FULL
}

func (m *ListAntimicrobialsRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListAntimicrobialsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Request to search for an Antimicrobial
type SearchAntimicrobialsRequest struct {
	View                 AntimicrobialView `protobuf:"varint,1,opt,name=view,proto3,enum=antibug.antimicrobial.AntimicrobialView" json:"view,omitempty"`
	Query                string            `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Filter               bool              `protobuf:"varint,3,opt,name=filter,proto3" json:"filter,omitempty"`
	PageToken            int32             `protobuf:"varint,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32             `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SearchAntimicrobialsRequest) Reset()         { *m = SearchAntimicrobialsRequest{} }
func (m *SearchAntimicrobialsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchAntimicrobialsRequest) ProtoMessage()    {}
func (*SearchAntimicrobialsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{12}
}

func (m *SearchAntimicrobialsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchAntimicrobialsRequest.Unmarshal(m, b)
}
func (m *SearchAntimicrobialsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchAntimicrobialsRequest.Marshal(b, m, deterministic)
}
func (m *SearchAntimicrobialsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchAntimicrobialsRequest.Merge(m, src)
}
func (m *SearchAntimicrobialsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchAntimicrobialsRequest.Size(m)
}
func (m *SearchAntimicrobialsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchAntimicrobialsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchAntimicrobialsRequest proto.InternalMessageInfo

func (m *SearchAntimicrobialsRequest) GetView() AntimicrobialView {
	if m != nil {
		return m.View
	}
	return AntimicrobialView_FULL
}

func (m *SearchAntimicrobialsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchAntimicrobialsRequest) GetFilter() bool {
	if m != nil {
		return m.Filter
	}
	return false
}

func (m *SearchAntimicrobialsRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *SearchAntimicrobialsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Antimicrobials contains a collection of antimicrobials
type Antimicrobials struct {
	Antimicrobials       []*Antimicrobial `protobuf:"bytes,1,rep,name=antimicrobials,proto3" json:"antimicrobials,omitempty"`
	NextPageToken        int32            `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Antimicrobials) Reset()         { *m = Antimicrobials{} }
func (m *Antimicrobials) String() string { return proto.CompactTextString(m) }
func (*Antimicrobials) ProtoMessage()    {}
func (*Antimicrobials) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{13}
}

func (m *Antimicrobials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Antimicrobials.Unmarshal(m, b)
}
func (m *Antimicrobials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Antimicrobials.Marshal(b, m, deterministic)
}
func (m *Antimicrobials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Antimicrobials.Merge(m, src)
}
func (m *Antimicrobials) XXX_Size() int {
	return xxx_messageInfo_Antimicrobials.Size(m)
}
func (m *Antimicrobials) XXX_DiscardUnknown() {
	xxx_messageInfo_Antimicrobials.DiscardUnknown(m)
}

var xxx_messageInfo_Antimicrobials proto.InternalMessageInfo

func (m *Antimicrobials) GetAntimicrobials() []*Antimicrobial {
	if m != nil {
		return m.Antimicrobials
	}
	return nil
}

func (m *Antimicrobials) GetNextPageToken() int32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

// Request to retrieve a single Antimicrobial agent
type GetAntimicrobialRequest struct {
	AntimicrobialId      string            `protobuf:"bytes,1,opt,name=antimicrobial_id,json=antimicrobialId,proto3" json:"antimicrobial_id,omitempty"`
	View                 AntimicrobialView `protobuf:"varint,2,opt,name=view,proto3,enum=antibug.antimicrobial.AntimicrobialView" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAntimicrobialRequest) Reset()         { *m = GetAntimicrobialRequest{} }
func (m *GetAntimicrobialRequest) String() string { return proto.CompactTextString(m) }
func (*GetAntimicrobialRequest) ProtoMessage()    {}
func (*GetAntimicrobialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9927f837201a5609, []int{14}
}

func (m *GetAntimicrobialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAntimicrobialRequest.Unmarshal(m, b)
}
func (m *GetAntimicrobialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAntimicrobialRequest.Marshal(b, m, deterministic)
}
func (m *GetAntimicrobialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAntimicrobialRequest.Merge(m, src)
}
func (m *GetAntimicrobialRequest) XXX_Size() int {
	return xxx_messageInfo_GetAntimicrobialRequest.Size(m)
}
func (m *GetAntimicrobialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAntimicrobialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAntimicrobialRequest proto.InternalMessageInfo

func (m *GetAntimicrobialRequest) GetAntimicrobialId() string {
	if m != nil {
		return m.AntimicrobialId
	}
	return ""
}

func (m *GetAntimicrobialRequest) GetView() AntimicrobialView {
	if m != nil {
		return m.View
	}
	return AntimicrobialView_FULL
}

func init() {
	proto.RegisterEnum("antibug.antimicrobial.AntimicrobialView", AntimicrobialView_name, AntimicrobialView_value)
	proto.RegisterType((*Antimicrobial)(nil), "antibug.antimicrobial.Antimicrobial")
	proto.RegisterType((*RepeatedString)(nil), "antibug.antimicrobial.RepeatedString")
	proto.RegisterType((*PharmacologyInfo)(nil), "antibug.antimicrobial.PharmacologyInfo")
	proto.RegisterType((*Pharmacology)(nil), "antibug.antimicrobial.Pharmacology")
	proto.RegisterType((*MicrobesInfo)(nil), "antibug.antimicrobial.MicrobesInfo")
	proto.RegisterType((*Spectrum)(nil), "antibug.antimicrobial.Spectrum")
	proto.RegisterType((*SpectrumOfActivity)(nil), "antibug.antimicrobial.SpectrumOfActivity")
	proto.RegisterType((*CreateAntimicrobialRequest)(nil), "antibug.antimicrobial.CreateAntimicrobialRequest")
	proto.RegisterType((*CreateAntimicrobialResponse)(nil), "antibug.antimicrobial.CreateAntimicrobialResponse")
	proto.RegisterType((*UpdateAntimicrobialRequest)(nil), "antibug.antimicrobial.UpdateAntimicrobialRequest")
	proto.RegisterType((*DeleteAntimicrobialRequest)(nil), "antibug.antimicrobial.DeleteAntimicrobialRequest")
	proto.RegisterType((*ListAntimicrobialsRequest)(nil), "antibug.antimicrobial.ListAntimicrobialsRequest")
	proto.RegisterType((*SearchAntimicrobialsRequest)(nil), "antibug.antimicrobial.SearchAntimicrobialsRequest")
	proto.RegisterType((*Antimicrobials)(nil), "antibug.antimicrobial.Antimicrobials")
	proto.RegisterType((*GetAntimicrobialRequest)(nil), "antibug.antimicrobial.GetAntimicrobialRequest")
}

func init() { proto.RegisterFile("antimicrobial.proto", fileDescriptor_9927f837201a5609) }

var fileDescriptor_9927f837201a5609 = []byte{
	// 1325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x4b, 0x6f, 0xdb, 0xc6,
	0x16, 0xbe, 0x94, 0x2d, 0x3f, 0x8e, 0x5f, 0xf2, 0xd8, 0xce, 0xe5, 0x95, 0xef, 0xc5, 0x65, 0xd9,
	0xa6, 0x7e, 0xb4, 0x16, 0x6d, 0xc5, 0x28, 0x10, 0xa7, 0x40, 0xea, 0x38, 0x6e, 0xea, 0xc2, 0x49,
	0x13, 0xca, 0xc9, 0xa2, 0x28, 0x20, 0x8c, 0xc8, 0x23, 0x6a, 0x12, 0x91, 0xc3, 0x70, 0x46, 0x7e,
	0xa4, 0xe8, 0x26, 0x8b, 0xa2, 0xeb, 0x06, 0x05, 0x8a, 0x16, 0x28, 0xba, 0xe8, 0x2f, 0xe8, 0xbe,
	0xcb, 0xee, 0x0b, 0xb4, 0x3f, 0xa1, 0xbb, 0xfe, 0x89, 0x82, 0x23, 0xca, 0x11, 0x2d, 0x31, 0x91,
	0x12, 0x74, 0x65, 0xce, 0x99, 0xf3, 0x7d, 0xf3, 0xcd, 0x79, 0x79, 0x04, 0x0b, 0x34, 0x90, 0xcc,
	0x67, 0x4e, 0xc4, 0x6b, 0x8c, 0x36, 0x4b, 0x61, 0xc4, 0x25, 0x27, 0x4b, 0xb1, 0xb1, 0xd6, 0xf2,
	0x4a, 0xa9, 0xcd, 0xe2, 0x7f, 0x3d, 0xce, 0xbd, 0x26, 0x5a, 0x34, 0x64, 0x16, 0x0d, 0x02, 0x2e,
	0xa9, 0x64, 0x3c, 0x10, 0x6d, 0x50, 0x71, 0x39, 0xd9, 0x55, 0xab, 0x5a, 0xab, 0x6e, 0xa1, 0x1f,
	0xca, 0xb3, 0x64, 0xf3, 0x5d, 0xf5, 0xc7, 0xd9, 0xf0, 0x30, 0xd8, 0x10, 0x27, 0xd4, 0xf3, 0x30,
	0xb2, 0x78, 0xa8, 0xe0, 0xbd, 0x54, 0xe6, 0x57, 0xe3, 0x30, 0xb3, 0xdb, 0x7d, 0x34, 0x59, 0x83,
	0x42, 0x4a, 0x4b, 0x95, 0xb9, 0xba, 0x66, 0x68, 0xab, 0x23, 0xf6, 0x5c, 0xca, 0x7e, 0xe0, 0x92,
	0x0d, 0x20, 0x69, 0xd7, 0x80, 0xfa, 0xa8, 0xe7, 0x0c, 0x6d, 0x75, 0xd2, 0x9e, 0x4f, 0xed, 0xdc,
	0xa1, 0x3e, 0x92, 0x25, 0x18, 0x73, 0xaa, 0x2e, 0xab, 0xd7, 0xf5, 0x11, 0xe5, 0x92, 0x77, 0x6e,
	0xb2, 0x7a, 0x9d, 0x6c, 0xc1, 0x22, 0x8f, 0x68, 0xb3, 0x5a, 0x63, 0x9c, 0x1e, 0x53, 0xd6, 0xa4,
	0x35, 0xd6, 0x64, 0xf2, 0x4c, 0x1f, 0x55, 0x4e, 0x0b, 0xf1, 0xde, 0x8d, 0xf4, 0x96, 0xd2, 0x18,
	0x86, 0x11, 0x3f, 0x65, 0x3e, 0x95, 0x58, 0x75, 0xb8, 0x90, 0x7a, 0x5e, 0xb9, 0xcf, 0x75, 0xd9,
	0xf7, 0xb8, 0x90, 0xe4, 0x63, 0x98, 0xf1, 0x30, 0xc0, 0xf8, 0x80, 0x96, 0xa0, 0x1e, 0xea, 0x63,
	0x86, 0xb6, 0x3a, 0x55, 0xbe, 0x5c, 0xea, 0x1b, 0xf8, 0x92, 0x8d, 0x21, 0x52, 0x89, 0x6e, 0x45,
	0x46, 0x2c, 0xf0, 0xec, 0xe9, 0x04, 0x7b, 0x3f, 0x86, 0x92, 0x3b, 0x30, 0xe7, 0x46, 0x2d, 0xaf,
	0xea, 0xf3, 0x80, 0x49, 0x1e, 0x3b, 0xe8, 0xe3, 0xc3, 0xb0, 0xcd, 0xc6, 0xe8, 0xdb, 0xe7, 0xe0,
	0x98, 0x8f, 0xba, 0xc7, 0x18, 0x09, 0xac, 0x62, 0xbd, 0x8e, 0x8e, 0x14, 0xfa, 0xc4, 0x50, 0x7c,
	0x09, 0x7a, 0xbf, 0x0d, 0x26, 0x47, 0x40, 0x7c, 0xfa, 0x90, 0x47, 0x55, 0x16, 0x48, 0x8c, 0xa8,
	0xa3, 0x12, 0xad, 0x4f, 0x0e, 0x43, 0x39, 0xaf, 0x08, 0x0e, 0xba, 0xf0, 0xe4, 0x16, 0x4c, 0x87,
	0x0d, 0x1a, 0xf9, 0xd4, 0xe1, 0x4d, 0xee, 0x9d, 0xe9, 0xa0, 0xf8, 0xde, 0xcc, 0xe0, 0xbb, 0xdb,
	0xe5, 0x6a, 0xa7, 0x80, 0xe4, 0x33, 0xb8, 0x44, 0x5d, 0x97, 0xc5, 0xac, 0x71, 0x59, 0x05, 0x75,
	0x1e, 0xf9, 0xaa, 0x18, 0xf5, 0xa9, 0x61, 0x24, 0x2e, 0x3d, 0x27, 0x39, 0x78, 0xce, 0x41, 0x1e,
	0xc0, 0x7c, 0xac, 0xf8, 0x98, 0xc9, 0xb3, 0xaa, 0x08, 0xd1, 0x91, 0x51, 0xcb, 0xd7, 0xa7, 0x15,
	0xf1, 0x5a, 0x06, 0x71, 0x25, 0x71, 0xfb, 0xa4, 0xbe, 0x9b, 0x20, 0xed, 0x42, 0x87, 0xa3, 0xb3,
	0x47, 0xae, 0xc3, 0x38, 0xba, 0x71, 0xc6, 0x84, 0x3e, 0x33, 0x8c, 0xcc, 0x0e, 0x8a, 0xbc, 0x0d,
	0x73, 0xad, 0xd0, 0x8d, 0xeb, 0x54, 0x32, 0x1f, 0xab, 0x02, 0x1d, 0x7d, 0x56, 0xf5, 0xd3, 0x4c,
	0xdb, 0x7c, 0xc4, 0x7c, 0xac, 0xa0, 0x63, 0xae, 0xc2, 0x6c, 0x9a, 0x82, 0x5c, 0x82, 0xb1, 0x63,
	0xda, 0x6c, 0xa1, 0xd0, 0x35, 0x63, 0x64, 0x75, 0xd2, 0x4e, 0x56, 0xe6, 0x0e, 0x14, 0xba, 0xc3,
	0x1c, 0x47, 0x81, 0x14, 0x60, 0xe4, 0x11, 0x9e, 0xa9, 0x4e, 0x9d, 0xb4, 0xe3, 0x4f, 0xb2, 0x08,
	0x79, 0xe5, 0x9f, 0x34, 0x64, 0x7b, 0x61, 0xd6, 0x61, 0xba, 0x1b, 0x4b, 0x1e, 0x00, 0xe9, 0x4e,
	0x92, 0x4a, 0x4b, 0xfb, 0xbc, 0xa9, 0xf2, 0xca, 0x00, 0x39, 0x8e, 0x0f, 0xb7, 0xe7, 0xc3, 0x0b,
	0x16, 0x61, 0x96, 0x61, 0xfa, 0xb6, 0x02, 0xa0, 0x50, 0xfa, 0x08, 0x8c, 0xaa, 0xe9, 0xd0, 0x16,
	0xa8, 0xbe, 0xc9, 0x2c, 0xe4, 0x98, 0x9b, 0xc8, 0xcb, 0x31, 0xd7, 0xa4, 0x30, 0x71, 0x1e, 0xf6,
	0x45, 0xc8, 0x7b, 0x11, 0x6f, 0x85, 0x09, 0xa0, 0xbd, 0x20, 0xd7, 0x61, 0xc2, 0x4f, 0x58, 0xf5,
	0x9c, 0xd2, 0x98, 0x55, 0x87, 0xdd, 0x87, 0xdb, 0xe7, 0x20, 0xf3, 0x1e, 0x90, 0xde, 0xac, 0x93,
	0x6b, 0x30, 0x71, 0x5e, 0x32, 0xed, 0xab, 0xff, 0xff, 0x25, 0x25, 0x63, 0x9f, 0x03, 0xcc, 0x06,
	0x14, 0xf7, 0xa2, 0x38, 0x6d, 0xa9, 0x39, 0x6a, 0xe3, 0xe3, 0x16, 0xb6, 0xe7, 0x4f, 0x8a, 0x41,
	0xdd, 0x67, 0xaa, 0xfc, 0x56, 0x06, 0x7f, 0x9a, 0x23, 0x0d, 0x35, 0x3f, 0x82, 0xe5, 0xbe, 0x27,
	0x89, 0x90, 0x07, 0x02, 0x33, 0x27, 0xf7, 0x64, 0xcf, 0xe4, 0x36, 0x9f, 0x69, 0x50, 0xbc, 0xaf,
	0xaa, 0xaf, 0xaf, 0xe8, 0xc1, 0x99, 0x7a, 0xef, 0x97, 0x7b, 0xf5, 0xfb, 0xdd, 0x82, 0xe2, 0x4d,
	0x6c, 0xe2, 0x6b, 0x8b, 0x32, 0xbf, 0xd1, 0xe0, 0x3f, 0x87, 0x4c, 0xc8, 0x14, 0x8f, 0xe8, 0x10,
	0xbd, 0x0f, 0xa3, 0xc7, 0x0c, 0x4f, 0x14, 0x78, 0xb6, 0xbc, 0x3a, 0x88, 0xd2, 0x07, 0x0c, 0x4f,
	0x6c, 0x85, 0x22, 0xff, 0x03, 0x08, 0xa9, 0x87, 0x55, 0xc9, 0x1f, 0x61, 0xa0, 0x6e, 0x9b, 0xb7,
	0x27, 0x63, 0xcb, 0x51, 0x6c, 0x20, 0xcb, 0xa0, 0x16, 0x55, 0xc1, 0x9e, 0xa0, 0xfa, 0x3f, 0x97,
	0xb7, 0x27, 0x62, 0x43, 0x85, 0x3d, 0x41, 0xf3, 0x57, 0x0d, 0x96, 0x2b, 0x48, 0x23, 0xa7, 0xf1,
	0x4f, 0x28, 0x5b, 0x84, 0xfc, 0xe3, 0x16, 0x46, 0x67, 0x9d, 0x86, 0x57, 0x8b, 0x78, 0x88, 0xd4,
	0x59, 0x53, 0x62, 0xa4, 0xd4, 0x4c, 0xd8, 0xc9, 0xea, 0xc2, 0x3d, 0x46, 0x5f, 0x78, 0x8f, 0xfc,
	0x85, 0x7b, 0x7c, 0xa9, 0xc1, 0x6c, 0xfa, 0x06, 0xe4, 0x10, 0x66, 0x53, 0x2a, 0x3b, 0x33, 0x64,
	0xb0, 0x42, 0xb8, 0x80, 0x8d, 0x67, 0x66, 0x80, 0xa7, 0xb2, 0xda, 0x13, 0xe9, 0x99, 0xd8, 0x7c,
	0xb7, 0xa3, 0xd2, 0x7c, 0xaa, 0xc1, 0xbf, 0x6f, 0xa1, 0x7c, 0xdd, 0x22, 0xee, 0xc4, 0x3d, 0xf7,
	0x2a, 0x71, 0x5f, 0x5f, 0x81, 0xf9, 0x9e, 0x2d, 0x32, 0x01, 0xa3, 0x1f, 0xde, 0x3f, 0x3c, 0x2c,
	0xfc, 0x2b, 0xfe, 0x3a, 0x3c, 0xa8, 0x1c, 0x15, 0xb4, 0xf2, 0x5f, 0xe3, 0x50, 0x48, 0x79, 0xee,
	0xde, 0x3d, 0x20, 0x3f, 0x6b, 0xb0, 0xd0, 0xa7, 0xab, 0xc9, 0x56, 0x86, 0x8a, 0xec, 0x59, 0x53,
	0x2c, 0x0f, 0x03, 0x69, 0x0f, 0x0d, 0x73, 0xfb, 0xe9, 0xef, 0x7f, 0x3e, 0xcb, 0x95, 0xcc, 0xb5,
	0xe4, 0xad, 0xa9, 0xf0, 0x56, 0x3a, 0x1d, 0x56, 0xfb, 0x29, 0x60, 0x39, 0x8a, 0x67, 0x47, 0x5b,
	0x27, 0xdf, 0x6b, 0xb0, 0xd0, 0x67, 0x7e, 0x64, 0x8a, 0xce, 0x9e, 0x35, 0xc5, 0x4b, 0xa5, 0xf6,
	0x6b, 0xb6, 0xd4, 0x79, 0xcd, 0x96, 0xf6, 0xe3, 0xd7, 0xac, 0x79, 0x55, 0x09, 0xbb, 0x52, 0x2e,
	0xbd, 0x48, 0xd8, 0xe7, 0x17, 0x33, 0xfc, 0x45, 0xac, 0xee, 0x5b, 0x0d, 0x16, 0xfa, 0x0c, 0x92,
	0x4c, 0x75, 0xd9, 0x43, 0x27, 0x53, 0xdd, 0x7b, 0x4a, 0xdd, 0xe6, 0xfa, 0x90, 0xea, 0xc8, 0x0f,
	0x1a, 0x90, 0xde, 0xc9, 0x44, 0x36, 0x33, 0x94, 0x65, 0x0e, 0xb1, 0xe2, 0xe5, 0x41, 0x8a, 0x54,
	0x98, 0x96, 0xd2, 0xb9, 0x46, 0x56, 0x06, 0x48, 0x6f, 0x93, 0x09, 0x49, 0x7e, 0xd4, 0xa0, 0x70,
	0xb1, 0xa3, 0x48, 0x29, 0xe3, 0xb0, 0x8c, 0xd6, 0x2b, 0x0e, 0xd4, 0xf4, 0x9d, 0x18, 0x92, 0x61,
	0x63, 0xf8, 0x93, 0x06, 0x8b, 0xfd, 0xa6, 0x28, 0xc9, 0xaa, 0xff, 0x17, 0x8c, 0xdc, 0x41, 0xe3,
	0xb8, 0xa5, 0xb4, 0xbe, 0x43, 0x06, 0x69, 0x13, 0xa1, 0x8e, 0xbb, 0xf1, 0x5b, 0xee, 0xeb, 0xdd,
	0x5f, 0x72, 0xe4, 0x0f, 0x0d, 0x96, 0x52, 0x64, 0x86, 0xc0, 0xe8, 0x98, 0x39, 0x68, 0x3a, 0xb0,
	0x42, 0xfb, 0x6d, 0x18, 0x1b, 0x46, 0x72, 0x80, 0x11, 0x46, 0xfc, 0x21, 0x3a, 0x92, 0xbc, 0xd1,
	0x90, 0x32, 0x14, 0x3b, 0x96, 0xe5, 0x31, 0xd9, 0x68, 0xd5, 0x4a, 0x0e, 0xf7, 0x2d, 0x8f, 0xb9,
	0x67, 0x3c, 0xe8, 0x68, 0x29, 0x2e, 0x79, 0xcc, 0x45, 0x1e, 0x34, 0xa8, 0x83, 0xd1, 0x07, 0x9e,
	0x4f, 0x59, 0x33, 0xf6, 0x5a, 0xbf, 0x07, 0x8b, 0x37, 0x2a, 0x37, 0x8d, 0x2b, 0x1b, 0x7b, 0x4d,
	0xda, 0x12, 0x68, 0x1c, 0x32, 0x07, 0xe3, 0xc7, 0xc2, 0xd5, 0x97, 0x32, 0x5a, 0xb5, 0x26, 0xaf,
	0x59, 0x3e, 0x15, 0x12, 0x23, 0xeb, 0xf0, 0x60, 0x6f, 0xff, 0x4e, 0x65, 0xbf, 0x24, 0x4f, 0x65,
	0x79, 0x64, 0xab, 0xb4, 0xb9, 0x3e, 0xa2, 0xe5, 0x46, 0xcb, 0xf1, 0xaf, 0xb0, 0x26, 0x73, 0xd4,
	0x03, 0xdc, 0x7a, 0x28, 0x78, 0xb0, 0xd3, 0x63, 0xb1, 0xaf, 0xc1, 0xc8, 0xf6, 0xe6, 0x36, 0xd9,
	0x86, 0x75, 0x1b, 0x65, 0x2b, 0x0a, 0xd0, 0x35, 0x4e, 0x1a, 0x18, 0x18, 0xb2, 0x81, 0x46, 0x84,
	0x82, 0xb7, 0x22, 0x07, 0x0d, 0x97, 0xa3, 0x30, 0x02, 0x2e, 0x0d, 0x3c, 0x65, 0x42, 0x96, 0xc8,
	0x18, 0x8c, 0x7e, 0x97, 0xd3, 0xc6, 0x3e, 0x4d, 0x3f, 0x10, 0x6a, 0x63, 0xaa, 0x0b, 0xaf, 0xfc,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0x33, 0xa7, 0xd5, 0x30, 0x4b, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AntimicrobialAPIClient is the client API for AntimicrobialAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AntimicrobialAPIClient interface {
	// Creates a new Antimicrobial resource
	CreateAntimicrobial(ctx context.Context, in *CreateAntimicrobialRequest, opts ...grpc.CallOption) (*CreateAntimicrobialResponse, error)
	// Updates an existing Antimicrobial resource
	UpdateAntimicrobial(ctx context.Context, in *UpdateAntimicrobialRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Removes an existing Antimicrobial resource
	DeleteAntimicrobial(ctx context.Context, in *DeleteAntimicrobialRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Retrieves a collection of Antimicrobial resource on the server
	ListAntimicrobials(ctx context.Context, in *ListAntimicrobialsRequest, opts ...grpc.CallOption) (*Antimicrobials, error)
	// Retrieves a single Antimicrobial resource
	GetAntimicrobial(ctx context.Context, in *GetAntimicrobialRequest, opts ...grpc.CallOption) (*Antimicrobial, error)
	// Searches for Antimicrobial and returns a list of possible results
	SearchAntimicrobials(ctx context.Context, in *SearchAntimicrobialsRequest, opts ...grpc.CallOption) (*Antimicrobials, error)
}

type antimicrobialAPIClient struct {
	cc *grpc.ClientConn
}

func NewAntimicrobialAPIClient(cc *grpc.ClientConn) AntimicrobialAPIClient {
	return &antimicrobialAPIClient{cc}
}

func (c *antimicrobialAPIClient) CreateAntimicrobial(ctx context.Context, in *CreateAntimicrobialRequest, opts ...grpc.CallOption) (*CreateAntimicrobialResponse, error) {
	out := new(CreateAntimicrobialResponse)
	err := c.cc.Invoke(ctx, "/antibug.antimicrobial.AntimicrobialAPI/CreateAntimicrobial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antimicrobialAPIClient) UpdateAntimicrobial(ctx context.Context, in *UpdateAntimicrobialRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/antibug.antimicrobial.AntimicrobialAPI/UpdateAntimicrobial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antimicrobialAPIClient) DeleteAntimicrobial(ctx context.Context, in *DeleteAntimicrobialRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/antibug.antimicrobial.AntimicrobialAPI/DeleteAntimicrobial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antimicrobialAPIClient) ListAntimicrobials(ctx context.Context, in *ListAntimicrobialsRequest, opts ...grpc.CallOption) (*Antimicrobials, error) {
	out := new(Antimicrobials)
	err := c.cc.Invoke(ctx, "/antibug.antimicrobial.AntimicrobialAPI/ListAntimicrobials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antimicrobialAPIClient) GetAntimicrobial(ctx context.Context, in *GetAntimicrobialRequest, opts ...grpc.CallOption) (*Antimicrobial, error) {
	out := new(Antimicrobial)
	err := c.cc.Invoke(ctx, "/antibug.antimicrobial.AntimicrobialAPI/GetAntimicrobial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *antimicrobialAPIClient) SearchAntimicrobials(ctx context.Context, in *SearchAntimicrobialsRequest, opts ...grpc.CallOption) (*Antimicrobials, error) {
	out := new(Antimicrobials)
	err := c.cc.Invoke(ctx, "/antibug.antimicrobial.AntimicrobialAPI/SearchAntimicrobials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AntimicrobialAPIServer is the server API for AntimicrobialAPI service.
type AntimicrobialAPIServer interface {
	// Creates a new Antimicrobial resource
	CreateAntimicrobial(context.Context, *CreateAntimicrobialRequest) (*CreateAntimicrobialResponse, error)
	// Updates an existing Antimicrobial resource
	UpdateAntimicrobial(context.Context, *UpdateAntimicrobialRequest) (*empty.Empty, error)
	// Removes an existing Antimicrobial resource
	DeleteAntimicrobial(context.Context, *DeleteAntimicrobialRequest) (*empty.Empty, error)
	// Retrieves a collection of Antimicrobial resource on the server
	ListAntimicrobials(context.Context, *ListAntimicrobialsRequest) (*Antimicrobials, error)
	// Retrieves a single Antimicrobial resource
	GetAntimicrobial(context.Context, *GetAntimicrobialRequest) (*Antimicrobial, error)
	// Searches for Antimicrobial and returns a list of possible results
	SearchAntimicrobials(context.Context, *SearchAntimicrobialsRequest) (*Antimicrobials, error)
}

func RegisterAntimicrobialAPIServer(s *grpc.Server, srv AntimicrobialAPIServer) {
	s.RegisterService(&_AntimicrobialAPI_serviceDesc, srv)
}

func _AntimicrobialAPI_CreateAntimicrobial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAntimicrobialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntimicrobialAPIServer).CreateAntimicrobial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.antimicrobial.AntimicrobialAPI/CreateAntimicrobial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntimicrobialAPIServer).CreateAntimicrobial(ctx, req.(*CreateAntimicrobialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntimicrobialAPI_UpdateAntimicrobial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAntimicrobialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntimicrobialAPIServer).UpdateAntimicrobial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.antimicrobial.AntimicrobialAPI/UpdateAntimicrobial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntimicrobialAPIServer).UpdateAntimicrobial(ctx, req.(*UpdateAntimicrobialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntimicrobialAPI_DeleteAntimicrobial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAntimicrobialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntimicrobialAPIServer).DeleteAntimicrobial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.antimicrobial.AntimicrobialAPI/DeleteAntimicrobial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntimicrobialAPIServer).DeleteAntimicrobial(ctx, req.(*DeleteAntimicrobialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntimicrobialAPI_ListAntimicrobials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAntimicrobialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntimicrobialAPIServer).ListAntimicrobials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.antimicrobial.AntimicrobialAPI/ListAntimicrobials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntimicrobialAPIServer).ListAntimicrobials(ctx, req.(*ListAntimicrobialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntimicrobialAPI_GetAntimicrobial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAntimicrobialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntimicrobialAPIServer).GetAntimicrobial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.antimicrobial.AntimicrobialAPI/GetAntimicrobial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntimicrobialAPIServer).GetAntimicrobial(ctx, req.(*GetAntimicrobialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AntimicrobialAPI_SearchAntimicrobials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAntimicrobialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AntimicrobialAPIServer).SearchAntimicrobials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.antimicrobial.AntimicrobialAPI/SearchAntimicrobials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AntimicrobialAPIServer).SearchAntimicrobials(ctx, req.(*SearchAntimicrobialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AntimicrobialAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "antibug.antimicrobial.AntimicrobialAPI",
	HandlerType: (*AntimicrobialAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAntimicrobial",
			Handler:    _AntimicrobialAPI_CreateAntimicrobial_Handler,
		},
		{
			MethodName: "UpdateAntimicrobial",
			Handler:    _AntimicrobialAPI_UpdateAntimicrobial_Handler,
		},
		{
			MethodName: "DeleteAntimicrobial",
			Handler:    _AntimicrobialAPI_DeleteAntimicrobial_Handler,
		},
		{
			MethodName: "ListAntimicrobials",
			Handler:    _AntimicrobialAPI_ListAntimicrobials_Handler,
		},
		{
			MethodName: "GetAntimicrobial",
			Handler:    _AntimicrobialAPI_GetAntimicrobial_Handler,
		},
		{
			MethodName: "SearchAntimicrobials",
			Handler:    _AntimicrobialAPI_SearchAntimicrobials_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "antimicrobial.proto",
}
