// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pathogen.proto

package pathogen

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PathogenView is the different views of the pathogen resource
type PathogenView int32

const (
	// Full information about the pathogen resource
	PathogenView_FULL PathogenView = 0
	// Server response include pathogen_name, pathogen_id, and general_information
	PathogenView_LIST PathogenView = 1
)

var PathogenView_name = map[int32]string{
	0: "FULL",
	1: "LIST",
}

var PathogenView_value = map[string]int32{
	"FULL": 0,
	"LIST": 1,
}

func (x PathogenView) String() string {
	return proto.EnumName(PathogenView_name, int32(x))
}

func (PathogenView) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{0}
}

// RepeatedString is repeated filed values
type RepeatedString struct {
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepeatedString) Reset()         { *m = RepeatedString{} }
func (m *RepeatedString) String() string { return proto.CompactTextString(m) }
func (*RepeatedString) ProtoMessage()    {}
func (*RepeatedString) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{0}
}

func (m *RepeatedString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatedString.Unmarshal(m, b)
}
func (m *RepeatedString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatedString.Marshal(b, m, deterministic)
}
func (m *RepeatedString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatedString.Merge(m, src)
}
func (m *RepeatedString) XXX_Size() int {
	return xxx_messageInfo_RepeatedString.Size(m)
}
func (m *RepeatedString) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatedString.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatedString proto.InternalMessageInfo

func (m *RepeatedString) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// Pathogen is bacterium, virus, or other micro-organism that can cause disease.
type Pathogen struct {
	PathogenId              int64             `protobuf:"varint,1,opt,name=pathogen_id,json=pathogenId,proto3" json:"pathogen_id,omitempty"`
	PathogenName            string            `protobuf:"bytes,2,opt,name=pathogen_name,json=pathogenName,proto3" json:"pathogen_name,omitempty"`
	GeneralInformation      string            `protobuf:"bytes,3,opt,name=general_information,json=generalInformation,proto3" json:"general_information,omitempty"`
	Category                string            `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Epidemology             *RepeatedString   `protobuf:"bytes,5,opt,name=epidemology,proto3" json:"epidemology,omitempty"`
	Symptoms                *RepeatedString   `protobuf:"bytes,6,opt,name=symptoms,proto3" json:"symptoms,omitempty"`
	AdditionalInfo          *RepeatedString   `protobuf:"bytes,7,opt,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty"`
	GeneralSusceptibilities *Susceptibilities `protobuf:"bytes,8,opt,name=general_susceptibilities,json=generalSusceptibilities,proto3" json:"general_susceptibilities,omitempty"`
	UpdateTimeSec           int64             `protobuf:"varint,9,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	Editors                 *RepeatedString   `protobuf:"bytes,10,opt,name=editors,proto3" json:"editors,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}          `json:"-"`
	XXX_unrecognized        []byte            `json:"-"`
	XXX_sizecache           int32             `json:"-"`
}

func (m *Pathogen) Reset()         { *m = Pathogen{} }
func (m *Pathogen) String() string { return proto.CompactTextString(m) }
func (*Pathogen) ProtoMessage()    {}
func (*Pathogen) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{1}
}

func (m *Pathogen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pathogen.Unmarshal(m, b)
}
func (m *Pathogen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pathogen.Marshal(b, m, deterministic)
}
func (m *Pathogen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pathogen.Merge(m, src)
}
func (m *Pathogen) XXX_Size() int {
	return xxx_messageInfo_Pathogen.Size(m)
}
func (m *Pathogen) XXX_DiscardUnknown() {
	xxx_messageInfo_Pathogen.DiscardUnknown(m)
}

var xxx_messageInfo_Pathogen proto.InternalMessageInfo

func (m *Pathogen) GetPathogenId() int64 {
	if m != nil {
		return m.PathogenId
	}
	return 0
}

func (m *Pathogen) GetPathogenName() string {
	if m != nil {
		return m.PathogenName
	}
	return ""
}

func (m *Pathogen) GetGeneralInformation() string {
	if m != nil {
		return m.GeneralInformation
	}
	return ""
}

func (m *Pathogen) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Pathogen) GetEpidemology() *RepeatedString {
	if m != nil {
		return m.Epidemology
	}
	return nil
}

func (m *Pathogen) GetSymptoms() *RepeatedString {
	if m != nil {
		return m.Symptoms
	}
	return nil
}

func (m *Pathogen) GetAdditionalInfo() *RepeatedString {
	if m != nil {
		return m.AdditionalInfo
	}
	return nil
}

func (m *Pathogen) GetGeneralSusceptibilities() *Susceptibilities {
	if m != nil {
		return m.GeneralSusceptibilities
	}
	return nil
}

func (m *Pathogen) GetUpdateTimeSec() int64 {
	if m != nil {
		return m.UpdateTimeSec
	}
	return 0
}

func (m *Pathogen) GetEditors() *RepeatedString {
	if m != nil {
		return m.Editors
	}
	return nil
}

// Susceptibility contains antibiotics susceptibility information against the pathogen
type Susceptibility struct {
	// Resistance Label
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Antibiotics effective
	Antibiotics          []string `protobuf:"bytes,2,rep,name=antibiotics,proto3" json:"antibiotics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Susceptibility) Reset()         { *m = Susceptibility{} }
func (m *Susceptibility) String() string { return proto.CompactTextString(m) }
func (*Susceptibility) ProtoMessage()    {}
func (*Susceptibility) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{2}
}

func (m *Susceptibility) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Susceptibility.Unmarshal(m, b)
}
func (m *Susceptibility) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Susceptibility.Marshal(b, m, deterministic)
}
func (m *Susceptibility) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Susceptibility.Merge(m, src)
}
func (m *Susceptibility) XXX_Size() int {
	return xxx_messageInfo_Susceptibility.Size(m)
}
func (m *Susceptibility) XXX_DiscardUnknown() {
	xxx_messageInfo_Susceptibility.DiscardUnknown(m)
}

var xxx_messageInfo_Susceptibility proto.InternalMessageInfo

func (m *Susceptibility) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Susceptibility) GetAntibiotics() []string {
	if m != nil {
		return m.Antibiotics
	}
	return nil
}

// Susceptibilities contains susceptibility information for a pathogen
type Susceptibilities struct {
	Susceptibilities     []*Susceptibility `protobuf:"bytes,1,rep,name=susceptibilities,proto3" json:"susceptibilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Susceptibilities) Reset()         { *m = Susceptibilities{} }
func (m *Susceptibilities) String() string { return proto.CompactTextString(m) }
func (*Susceptibilities) ProtoMessage()    {}
func (*Susceptibilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{3}
}

func (m *Susceptibilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Susceptibilities.Unmarshal(m, b)
}
func (m *Susceptibilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Susceptibilities.Marshal(b, m, deterministic)
}
func (m *Susceptibilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Susceptibilities.Merge(m, src)
}
func (m *Susceptibilities) XXX_Size() int {
	return xxx_messageInfo_Susceptibilities.Size(m)
}
func (m *Susceptibilities) XXX_DiscardUnknown() {
	xxx_messageInfo_Susceptibilities.DiscardUnknown(m)
}

var xxx_messageInfo_Susceptibilities proto.InternalMessageInfo

func (m *Susceptibilities) GetSusceptibilities() []*Susceptibility {
	if m != nil {
		return m.Susceptibilities
	}
	return nil
}

// CreatePathogenRequest is request to create a new pathogen
type CreatePathogenRequest struct {
	// Pathogen resource
	Pathogen             *Pathogen `protobuf:"bytes,1,opt,name=pathogen,proto3" json:"pathogen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreatePathogenRequest) Reset()         { *m = CreatePathogenRequest{} }
func (m *CreatePathogenRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePathogenRequest) ProtoMessage()    {}
func (*CreatePathogenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{4}
}

func (m *CreatePathogenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePathogenRequest.Unmarshal(m, b)
}
func (m *CreatePathogenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePathogenRequest.Marshal(b, m, deterministic)
}
func (m *CreatePathogenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePathogenRequest.Merge(m, src)
}
func (m *CreatePathogenRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePathogenRequest.Size(m)
}
func (m *CreatePathogenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePathogenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePathogenRequest proto.InternalMessageInfo

func (m *CreatePathogenRequest) GetPathogen() *Pathogen {
	if m != nil {
		return m.Pathogen
	}
	return nil
}

// CreatePathogenResponse is response to CreatePathogen containing the id of the newly created pathogen
type CreatePathogenResponse struct {
	PathogenId           string   `protobuf:"bytes,1,opt,name=pathogen_id,json=pathogenId,proto3" json:"pathogen_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePathogenResponse) Reset()         { *m = CreatePathogenResponse{} }
func (m *CreatePathogenResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePathogenResponse) ProtoMessage()    {}
func (*CreatePathogenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{5}
}

func (m *CreatePathogenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePathogenResponse.Unmarshal(m, b)
}
func (m *CreatePathogenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePathogenResponse.Marshal(b, m, deterministic)
}
func (m *CreatePathogenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePathogenResponse.Merge(m, src)
}
func (m *CreatePathogenResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePathogenResponse.Size(m)
}
func (m *CreatePathogenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePathogenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePathogenResponse proto.InternalMessageInfo

func (m *CreatePathogenResponse) GetPathogenId() string {
	if m != nil {
		return m.PathogenId
	}
	return ""
}

// UpdatePathogenRequest is request to update a pathogen
type UpdatePathogenRequest struct {
	PathogenId           string    `protobuf:"bytes,1,opt,name=pathogen_id,json=pathogenId,proto3" json:"pathogen_id,omitempty"`
	Pathogen             *Pathogen `protobuf:"bytes,2,opt,name=pathogen,proto3" json:"pathogen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdatePathogenRequest) Reset()         { *m = UpdatePathogenRequest{} }
func (m *UpdatePathogenRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePathogenRequest) ProtoMessage()    {}
func (*UpdatePathogenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{6}
}

func (m *UpdatePathogenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePathogenRequest.Unmarshal(m, b)
}
func (m *UpdatePathogenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePathogenRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePathogenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePathogenRequest.Merge(m, src)
}
func (m *UpdatePathogenRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePathogenRequest.Size(m)
}
func (m *UpdatePathogenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePathogenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePathogenRequest proto.InternalMessageInfo

func (m *UpdatePathogenRequest) GetPathogenId() string {
	if m != nil {
		return m.PathogenId
	}
	return ""
}

func (m *UpdatePathogenRequest) GetPathogen() *Pathogen {
	if m != nil {
		return m.Pathogen
	}
	return nil
}

// DeletePathogenRequest is request to remove a pathogen from database.
type DeletePathogenRequest struct {
	PathogenId           string   `protobuf:"bytes,1,opt,name=pathogen_id,json=pathogenId,proto3" json:"pathogen_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePathogenRequest) Reset()         { *m = DeletePathogenRequest{} }
func (m *DeletePathogenRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePathogenRequest) ProtoMessage()    {}
func (*DeletePathogenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{7}
}

func (m *DeletePathogenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePathogenRequest.Unmarshal(m, b)
}
func (m *DeletePathogenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePathogenRequest.Marshal(b, m, deterministic)
}
func (m *DeletePathogenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePathogenRequest.Merge(m, src)
}
func (m *DeletePathogenRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePathogenRequest.Size(m)
}
func (m *DeletePathogenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePathogenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePathogenRequest proto.InternalMessageInfo

func (m *DeletePathogenRequest) GetPathogenId() string {
	if m != nil {
		return m.PathogenId
	}
	return ""
}

// ListPathogensRequest is request to retrieve a collection of pathogens
type ListPathogensRequest struct {
	View                 PathogenView `protobuf:"varint,1,opt,name=view,proto3,enum=antibug.pathogen.PathogenView" json:"view,omitempty"`
	PageToken            int32        `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32        `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListPathogensRequest) Reset()         { *m = ListPathogensRequest{} }
func (m *ListPathogensRequest) String() string { return proto.CompactTextString(m) }
func (*ListPathogensRequest) ProtoMessage()    {}
func (*ListPathogensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{8}
}

func (m *ListPathogensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPathogensRequest.Unmarshal(m, b)
}
func (m *ListPathogensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPathogensRequest.Marshal(b, m, deterministic)
}
func (m *ListPathogensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPathogensRequest.Merge(m, src)
}
func (m *ListPathogensRequest) XXX_Size() int {
	return xxx_messageInfo_ListPathogensRequest.Size(m)
}
func (m *ListPathogensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPathogensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPathogensRequest proto.InternalMessageInfo

func (m *ListPathogensRequest) GetView() PathogenView {
	if m != nil {
		return m.View
	}
	return PathogenView_FULL
}

func (m *ListPathogensRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *ListPathogensRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// Pathogens is response containing a collection of pathogens from ListPathogensRequest call
type Pathogens struct {
	Pathogens            []*Pathogen `protobuf:"bytes,1,rep,name=pathogens,proto3" json:"pathogens,omitempty"`
	NextPageToken        int32       `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Pathogens) Reset()         { *m = Pathogens{} }
func (m *Pathogens) String() string { return proto.CompactTextString(m) }
func (*Pathogens) ProtoMessage()    {}
func (*Pathogens) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{9}
}

func (m *Pathogens) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pathogens.Unmarshal(m, b)
}
func (m *Pathogens) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pathogens.Marshal(b, m, deterministic)
}
func (m *Pathogens) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pathogens.Merge(m, src)
}
func (m *Pathogens) XXX_Size() int {
	return xxx_messageInfo_Pathogens.Size(m)
}
func (m *Pathogens) XXX_DiscardUnknown() {
	xxx_messageInfo_Pathogens.DiscardUnknown(m)
}

var xxx_messageInfo_Pathogens proto.InternalMessageInfo

func (m *Pathogens) GetPathogens() []*Pathogen {
	if m != nil {
		return m.Pathogens
	}
	return nil
}

func (m *Pathogens) GetNextPageToken() int32 {
	if m != nil {
		return m.NextPageToken
	}
	return 0
}

// SearchPathogensRequest is request to search for a pathogen
type SearchPathogensRequest struct {
	Query                string       `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	PageToken            int32        `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize             int32        `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	View                 PathogenView `protobuf:"varint,4,opt,name=view,proto3,enum=antibug.pathogen.PathogenView" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SearchPathogensRequest) Reset()         { *m = SearchPathogensRequest{} }
func (m *SearchPathogensRequest) String() string { return proto.CompactTextString(m) }
func (*SearchPathogensRequest) ProtoMessage()    {}
func (*SearchPathogensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{10}
}

func (m *SearchPathogensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPathogensRequest.Unmarshal(m, b)
}
func (m *SearchPathogensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPathogensRequest.Marshal(b, m, deterministic)
}
func (m *SearchPathogensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPathogensRequest.Merge(m, src)
}
func (m *SearchPathogensRequest) XXX_Size() int {
	return xxx_messageInfo_SearchPathogensRequest.Size(m)
}
func (m *SearchPathogensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPathogensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPathogensRequest proto.InternalMessageInfo

func (m *SearchPathogensRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchPathogensRequest) GetPageToken() int32 {
	if m != nil {
		return m.PageToken
	}
	return 0
}

func (m *SearchPathogensRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchPathogensRequest) GetView() PathogenView {
	if m != nil {
		return m.View
	}
	return PathogenView_FULL
}

// GetPathogenRequest is request to retrieve a single pathogen from the datastore
type GetPathogenRequest struct {
	PathogenId           string       `protobuf:"bytes,1,opt,name=pathogen_id,json=pathogenId,proto3" json:"pathogen_id,omitempty"`
	View                 PathogenView `protobuf:"varint,2,opt,name=view,proto3,enum=antibug.pathogen.PathogenView" json:"view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetPathogenRequest) Reset()         { *m = GetPathogenRequest{} }
func (m *GetPathogenRequest) String() string { return proto.CompactTextString(m) }
func (*GetPathogenRequest) ProtoMessage()    {}
func (*GetPathogenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ef4f1c47953891, []int{11}
}

func (m *GetPathogenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPathogenRequest.Unmarshal(m, b)
}
func (m *GetPathogenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPathogenRequest.Marshal(b, m, deterministic)
}
func (m *GetPathogenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPathogenRequest.Merge(m, src)
}
func (m *GetPathogenRequest) XXX_Size() int {
	return xxx_messageInfo_GetPathogenRequest.Size(m)
}
func (m *GetPathogenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPathogenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPathogenRequest proto.InternalMessageInfo

func (m *GetPathogenRequest) GetPathogenId() string {
	if m != nil {
		return m.PathogenId
	}
	return ""
}

func (m *GetPathogenRequest) GetView() PathogenView {
	if m != nil {
		return m.View
	}
	return PathogenView_FULL
}

func init() {
	proto.RegisterEnum("antibug.pathogen.PathogenView", PathogenView_name, PathogenView_value)
	proto.RegisterType((*RepeatedString)(nil), "antibug.pathogen.RepeatedString")
	proto.RegisterType((*Pathogen)(nil), "antibug.pathogen.Pathogen")
	proto.RegisterType((*Susceptibility)(nil), "antibug.pathogen.Susceptibility")
	proto.RegisterType((*Susceptibilities)(nil), "antibug.pathogen.Susceptibilities")
	proto.RegisterType((*CreatePathogenRequest)(nil), "antibug.pathogen.CreatePathogenRequest")
	proto.RegisterType((*CreatePathogenResponse)(nil), "antibug.pathogen.CreatePathogenResponse")
	proto.RegisterType((*UpdatePathogenRequest)(nil), "antibug.pathogen.UpdatePathogenRequest")
	proto.RegisterType((*DeletePathogenRequest)(nil), "antibug.pathogen.DeletePathogenRequest")
	proto.RegisterType((*ListPathogensRequest)(nil), "antibug.pathogen.ListPathogensRequest")
	proto.RegisterType((*Pathogens)(nil), "antibug.pathogen.Pathogens")
	proto.RegisterType((*SearchPathogensRequest)(nil), "antibug.pathogen.SearchPathogensRequest")
	proto.RegisterType((*GetPathogenRequest)(nil), "antibug.pathogen.GetPathogenRequest")
}

func init() { proto.RegisterFile("pathogen.proto", fileDescriptor_97ef4f1c47953891) }

var fileDescriptor_97ef4f1c47953891 = []byte{
	// 1127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x41, 0x8f, 0xdb, 0x44,
	0x14, 0xc6, 0x49, 0x76, 0x9b, 0xbc, 0x74, 0xd3, 0x68, 0xd8, 0x5d, 0xac, 0x2c, 0xa5, 0xc6, 0xac,
	0x4a, 0x88, 0xba, 0x71, 0x49, 0x2b, 0xd4, 0x2e, 0x1c, 0x68, 0xb7, 0x05, 0x22, 0x45, 0x6d, 0x71,
	0x5a, 0x0e, 0x95, 0x20, 0x38, 0xf6, 0xab, 0x33, 0xc5, 0xf6, 0xb8, 0x9e, 0x49, 0xb7, 0x29, 0xaa,
	0x80, 0x1e, 0xfa, 0x03, 0xca, 0x0d, 0x24, 0x0e, 0xdc, 0x39, 0xf1, 0x0b, 0xb8, 0x72, 0xe5, 0x2f,
	0xf0, 0x43, 0x90, 0x27, 0x76, 0x36, 0x89, 0x93, 0xdd, 0xac, 0x38, 0x25, 0xf3, 0xe6, 0xbd, 0xef,
	0x7d, 0xef, 0xcd, 0xfb, 0xc6, 0x03, 0x95, 0xd0, 0x12, 0x03, 0xe6, 0x62, 0xd0, 0x0c, 0x23, 0x26,
	0x18, 0xa9, 0x5a, 0x81, 0xa0, 0xfd, 0xa1, 0xdb, 0x4c, 0xed, 0xb5, 0xb7, 0x5d, 0xc6, 0x5c, 0x0f,
	0x0d, 0x2b, 0xa4, 0x86, 0x15, 0x04, 0x4c, 0x58, 0x82, 0xb2, 0x80, 0x8f, 0xfd, 0x6b, 0x3b, 0xc9,
	0xae, 0x5c, 0xf5, 0x87, 0x8f, 0x0c, 0xf4, 0x43, 0x31, 0x4a, 0x36, 0x2f, 0xc9, 0x1f, 0x7b, 0xcf,
	0xc5, 0x60, 0x8f, 0x1f, 0x5a, 0xae, 0x8b, 0x91, 0xc1, 0x42, 0x19, 0x9e, 0x85, 0xd2, 0xeb, 0x50,
	0x31, 0x31, 0x44, 0x4b, 0xa0, 0xd3, 0x15, 0x11, 0x0d, 0x5c, 0xb2, 0x0d, 0xeb, 0x4f, 0x2d, 0x6f,
	0x88, 0x5c, 0x55, 0xb4, 0x7c, 0xbd, 0x64, 0x26, 0x2b, 0xfd, 0x8f, 0x02, 0x14, 0xef, 0x25, 0xfc,
	0xc8, 0x05, 0x28, 0xa7, 0x5c, 0x7b, 0xd4, 0x51, 0x15, 0x4d, 0xa9, 0xe7, 0x4d, 0x48, 0x4d, 0x6d,
	0x87, 0xbc, 0x07, 0x1b, 0x13, 0x87, 0xc0, 0xf2, 0x51, 0xcd, 0x69, 0x4a, 0xbd, 0x64, 0x9e, 0x4d,
	0x8d, 0x77, 0x2c, 0x1f, 0x89, 0x01, 0x6f, 0xba, 0x18, 0x60, 0x64, 0x79, 0x3d, 0x1a, 0x3c, 0x62,
	0x91, 0x2f, 0xa9, 0xa9, 0x79, 0xe9, 0x4a, 0x92, 0xad, 0xf6, 0xd1, 0x0e, 0xa9, 0x41, 0xd1, 0xb6,
	0x04, 0xba, 0x2c, 0x1a, 0xa9, 0x05, 0xe9, 0x35, 0x59, 0x93, 0x9b, 0x50, 0xc6, 0x90, 0x3a, 0xe8,
	0x33, 0x8f, 0xb9, 0x23, 0x75, 0x4d, 0x53, 0xea, 0xe5, 0x96, 0xd6, 0x9c, 0x6f, 0x6d, 0x73, 0xb6,
	0x5c, 0x73, 0x3a, 0x88, 0x7c, 0x02, 0x45, 0x3e, 0xf2, 0x43, 0xc1, 0x7c, 0xae, 0xae, 0xaf, 0x08,
	0x30, 0x89, 0x20, 0x6d, 0x38, 0x67, 0x39, 0x0e, 0x8d, 0x99, 0x26, 0x15, 0xa9, 0x67, 0x56, 0x04,
	0xa9, 0x1c, 0x05, 0xc6, 0xf5, 0x92, 0xaf, 0x41, 0x4d, 0x3b, 0xc3, 0x87, 0xdc, 0xc6, 0x50, 0xd0,
	0x3e, 0xf5, 0xa8, 0xa0, 0xc8, 0xd5, 0xa2, 0xc4, 0xd4, 0xb3, 0x98, 0xdd, 0x39, 0x4f, 0xf3, 0xad,
	0x04, 0x63, 0x7e, 0x83, 0x5c, 0x84, 0x73, 0xc3, 0xd0, 0xb1, 0x04, 0xf6, 0x04, 0xf5, 0xb1, 0xc7,
	0xd1, 0x56, 0x4b, 0xf2, 0x08, 0x37, 0xc6, 0xe6, 0xfb, 0xd4, 0xc7, 0x2e, 0xda, 0x64, 0x1f, 0xce,
	0xa0, 0x43, 0x05, 0x8b, 0xb8, 0x0a, 0x2b, 0x56, 0x92, 0x06, 0xe8, 0x5f, 0x40, 0x65, 0x26, 0xef,
	0x88, 0x6c, 0xc2, 0x9a, 0xa0, 0xc2, 0x43, 0x39, 0x2e, 0x25, 0x73, 0xbc, 0x20, 0x1a, 0x94, 0x25,
	0x26, 0x65, 0x82, 0xda, 0x5c, 0xcd, 0xc9, 0xa1, 0x9b, 0x36, 0xe9, 0xdf, 0x42, 0x35, 0x53, 0x41,
	0x07, 0xaa, 0x99, 0xc6, 0xc4, 0xf3, 0xba, 0x90, 0xe2, 0x2c, 0x0f, 0x33, 0x13, 0xa9, 0xdf, 0x85,
	0xad, 0x83, 0x28, 0xae, 0x22, 0x1d, 0x70, 0x13, 0x9f, 0x0c, 0x91, 0x0b, 0xf2, 0x11, 0x14, 0x53,
	0x14, 0xc9, 0xba, 0xdc, 0xaa, 0x65, 0xe1, 0x27, 0x41, 0x13, 0x5f, 0xfd, 0x3a, 0x6c, 0xcf, 0x03,
	0xf2, 0x90, 0x05, 0x1c, 0x17, 0x29, 0xa7, 0x34, 0xad, 0x1c, 0x3d, 0x84, 0xad, 0x07, 0xf2, 0x10,
	0xe6, 0xb9, 0x9c, 0x14, 0x39, 0x43, 0x36, 0x77, 0x0a, 0xb2, 0xd7, 0x60, 0xeb, 0x16, 0x7a, 0x78,
	0xfa, 0x8c, 0xfa, 0x2b, 0x05, 0x36, 0x3b, 0x94, 0x8b, 0x34, 0x90, 0xa7, 0x91, 0x2d, 0x28, 0x3c,
	0xa5, 0x78, 0x28, 0x43, 0x2a, 0xad, 0x77, 0x96, 0xd3, 0xf8, 0x8a, 0xe2, 0xa1, 0x29, 0x7d, 0xc9,
	0x79, 0x80, 0xd0, 0x72, 0xb1, 0x27, 0xd8, 0x77, 0x49, 0x01, 0x6b, 0x66, 0x29, 0xb6, 0xdc, 0x8f,
	0x0d, 0x64, 0x07, 0xe4, 0xa2, 0xc7, 0xe9, 0x73, 0x94, 0x57, 0xc4, 0x5a, 0x5c, 0x82, 0x8b, 0x5d,
	0xfa, 0x1c, 0x75, 0x1f, 0x4a, 0x13, 0x0e, 0xe4, 0x5a, 0xec, 0x99, 0x2c, 0x92, 0xa1, 0x38, 0xae,
	0x11, 0x47, 0xce, 0xb1, 0x2e, 0x02, 0x7c, 0x26, 0x7a, 0x19, 0x1e, 0x1b, 0xb1, 0xf9, 0x5e, 0xca,
	0x45, 0xff, 0x4d, 0x81, 0xed, 0x2e, 0x5a, 0x91, 0x3d, 0xc8, 0x54, 0xbe, 0x09, 0x6b, 0x4f, 0x86,
	0x18, 0x8d, 0xd2, 0x21, 0x97, 0x8b, 0xff, 0x53, 0xdb, 0xa4, 0x97, 0x85, 0xd5, 0x7b, 0xa9, 0x53,
	0x20, 0x9f, 0xa3, 0x38, 0xf5, 0x04, 0xa5, 0xa9, 0x72, 0xab, 0xa7, 0x6a, 0xe8, 0x70, 0x76, 0xda,
	0x4a, 0x8a, 0x50, 0xf8, 0xec, 0x41, 0xa7, 0x53, 0x7d, 0x23, 0xfe, 0xd7, 0x69, 0x77, 0xef, 0x57,
	0x95, 0xd6, 0xef, 0x67, 0xa0, 0x9c, 0x3a, 0xdd, 0xb8, 0xd7, 0x26, 0x3f, 0xe5, 0xa0, 0x32, 0xab,
	0x0f, 0xf2, 0x7e, 0x36, 0xd9, 0x42, 0x49, 0xd6, 0xea, 0x27, 0x3b, 0x8e, 0xa5, 0xa6, 0xff, 0xaa,
	0xbc, 0xbe, 0x71, 0xb7, 0xb6, 0x33, 0xde, 0xe5, 0x9a, 0xa5, 0xa5, 0x01, 0x5a, 0x84, 0x9c, 0x0d,
	0x23, 0x1b, 0xf5, 0xcb, 0x50, 0xee, 0xca, 0x7f, 0x5a, 0x84, 0x21, 0x23, 0xef, 0x0e, 0x84, 0x08,
	0xf9, 0xbe, 0x61, 0xb8, 0x54, 0x0c, 0x86, 0xfd, 0xa6, 0xcd, 0x7c, 0xc3, 0xa5, 0xce, 0x88, 0x05,
	0x46, 0x92, 0xf4, 0xe5, 0x3f, 0xff, 0xfe, 0x9c, 0x3b, 0xd0, 0xcf, 0x27, 0x5f, 0x66, 0x69, 0x33,
	0x26, 0x03, 0x64, 0xd8, 0x32, 0xd7, 0xbe, 0xd2, 0x78, 0x78, 0x41, 0xaf, 0x2d, 0xf1, 0xb1, 0x1c,
	0x67, 0x5f, 0x69, 0x90, 0x97, 0x0a, 0x54, 0x66, 0x85, 0xbe, 0xa8, 0x07, 0x0b, 0xaf, 0x82, 0xda,
	0x76, 0x73, 0xfc, 0x02, 0x68, 0xa6, 0x2f, 0x80, 0xe6, 0xed, 0xf8, 0x05, 0xa0, 0x1b, 0x92, 0xde,
	0x07, 0xad, 0xdd, 0x25, 0xa9, 0xbf, 0x9f, 0x3a, 0xfe, 0x17, 0x31, 0x89, 0x1f, 0xa0, 0x32, 0x2b,
	0xfd, 0x45, 0x1c, 0x16, 0x5e, 0x0e, 0x4b, 0x39, 0x5c, 0x92, 0x1c, 0x2e, 0x36, 0x56, 0xe2, 0x40,
	0x7e, 0x54, 0x60, 0x63, 0xe6, 0x06, 0x21, 0x17, 0xb3, 0x04, 0x16, 0x5d, 0x31, 0xb5, 0x9d, 0xe5,
	0xd3, 0xc9, 0xf5, 0x86, 0x24, 0xb1, 0x4b, 0xf4, 0x65, 0x67, 0x60, 0xc7, 0x1f, 0x5b, 0xc3, 0xa3,
	0x5c, 0x90, 0x57, 0x0a, 0x9c, 0x9b, 0x13, 0x33, 0x59, 0x30, 0x64, 0x8b, 0xf5, 0x7e, 0x3c, 0x8d,
	0xa4, 0x17, 0x64, 0xf7, 0x78, 0x1a, 0x5c, 0x42, 0x93, 0x17, 0x50, 0x9e, 0x12, 0x2d, 0xd9, 0xcd,
	0x22, 0x67, 0x35, 0x5d, 0x3b, 0xe6, 0x66, 0x3b, 0x31, 0xfd, 0xcc, 0x51, 0xdc, 0xfc, 0x2b, 0xf7,
	0xfa, 0xc6, 0x9f, 0x39, 0xf2, 0xb7, 0x02, 0xd5, 0x14, 0x41, 0xe3, 0x18, 0x3d, 0xa5, 0x36, 0xea,
	0xdf, 0x80, 0x3e, 0x6f, 0xd3, 0xf6, 0xb4, 0x04, 0x51, 0x0b, 0x23, 0xf6, 0x18, 0x6d, 0xb1, 0x82,
	0x7c, 0x6a, 0x5b, 0x2e, 0x75, 0x90, 0x05, 0x03, 0xcb, 0xc6, 0xe8, 0x53, 0xd7, 0xb7, 0xa8, 0x17,
	0x7b, 0x35, 0xbe, 0x84, 0xcd, 0x9b, 0xdd, 0x5b, 0xda, 0x95, 0xbd, 0x03, 0xcf, 0x1a, 0x72, 0xd4,
	0x3a, 0xd4, 0xc6, 0xf8, 0x6b, 0x79, 0xfd, 0x44, 0x44, 0xa3, 0xef, 0xb1, 0xbe, 0xe1, 0x5b, 0x5c,
	0x60, 0x64, 0x74, 0xda, 0x07, 0xb7, 0xef, 0x74, 0x6f, 0x37, 0xc5, 0x33, 0xd1, 0xca, 0x7f, 0xd8,
	0xbc, 0xdc, 0xc8, 0x2b, 0xb9, 0x42, 0xab, 0x6a, 0x85, 0xa1, 0x47, 0x6d, 0xf9, 0x84, 0x34, 0x1e,
	0x73, 0x16, 0xec, 0x67, 0x2c, 0xe6, 0xc7, 0x90, 0xbf, 0x7a, 0xf9, 0x2a, 0xb9, 0x0a, 0x0d, 0x13,
	0xc5, 0x30, 0x0a, 0xd0, 0xd1, 0x0e, 0x07, 0x18, 0x68, 0x62, 0x80, 0x93, 0xdb, 0x42, 0x73, 0x18,
	0x72, 0x2d, 0x60, 0x42, 0xc3, 0x67, 0x94, 0x8b, 0x26, 0x59, 0x87, 0xc2, 0x2f, 0x39, 0x65, 0xfd,
	0xe1, 0xe4, 0x53, 0xda, 0x5f, 0x97, 0x62, 0xb8, 0xf2, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7d,
	0x5e, 0x5f, 0x7e, 0xe2, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PathogenAPIClient is the client API for PathogenAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PathogenAPIClient interface {
	// Creates a new Pathogen resource
	CreatePathogen(ctx context.Context, in *CreatePathogenRequest, opts ...grpc.CallOption) (*CreatePathogenResponse, error)
	// Updates an existing Pathogen resource
	UpdatePathogen(ctx context.Context, in *UpdatePathogenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Removes an existing Pathogen resource
	DeletePathogen(ctx context.Context, in *DeletePathogenRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Retrieves a collection of Pathogen resource on the server
	ListPathogens(ctx context.Context, in *ListPathogensRequest, opts ...grpc.CallOption) (*Pathogens, error)
	// Searches for Pathogen and returns a list of possible results
	SearchPathogens(ctx context.Context, in *SearchPathogensRequest, opts ...grpc.CallOption) (*Pathogens, error)
	// Retrives a single pathogen resource
	GetPathogen(ctx context.Context, in *GetPathogenRequest, opts ...grpc.CallOption) (*Pathogen, error)
}

type pathogenAPIClient struct {
	cc *grpc.ClientConn
}

func NewPathogenAPIClient(cc *grpc.ClientConn) PathogenAPIClient {
	return &pathogenAPIClient{cc}
}

func (c *pathogenAPIClient) CreatePathogen(ctx context.Context, in *CreatePathogenRequest, opts ...grpc.CallOption) (*CreatePathogenResponse, error) {
	out := new(CreatePathogenResponse)
	err := c.cc.Invoke(ctx, "/antibug.pathogen.PathogenAPI/CreatePathogen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pathogenAPIClient) UpdatePathogen(ctx context.Context, in *UpdatePathogenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/antibug.pathogen.PathogenAPI/UpdatePathogen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pathogenAPIClient) DeletePathogen(ctx context.Context, in *DeletePathogenRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/antibug.pathogen.PathogenAPI/DeletePathogen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pathogenAPIClient) ListPathogens(ctx context.Context, in *ListPathogensRequest, opts ...grpc.CallOption) (*Pathogens, error) {
	out := new(Pathogens)
	err := c.cc.Invoke(ctx, "/antibug.pathogen.PathogenAPI/ListPathogens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pathogenAPIClient) SearchPathogens(ctx context.Context, in *SearchPathogensRequest, opts ...grpc.CallOption) (*Pathogens, error) {
	out := new(Pathogens)
	err := c.cc.Invoke(ctx, "/antibug.pathogen.PathogenAPI/SearchPathogens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pathogenAPIClient) GetPathogen(ctx context.Context, in *GetPathogenRequest, opts ...grpc.CallOption) (*Pathogen, error) {
	out := new(Pathogen)
	err := c.cc.Invoke(ctx, "/antibug.pathogen.PathogenAPI/GetPathogen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PathogenAPIServer is the server API for PathogenAPI service.
type PathogenAPIServer interface {
	// Creates a new Pathogen resource
	CreatePathogen(context.Context, *CreatePathogenRequest) (*CreatePathogenResponse, error)
	// Updates an existing Pathogen resource
	UpdatePathogen(context.Context, *UpdatePathogenRequest) (*empty.Empty, error)
	// Removes an existing Pathogen resource
	DeletePathogen(context.Context, *DeletePathogenRequest) (*empty.Empty, error)
	// Retrieves a collection of Pathogen resource on the server
	ListPathogens(context.Context, *ListPathogensRequest) (*Pathogens, error)
	// Searches for Pathogen and returns a list of possible results
	SearchPathogens(context.Context, *SearchPathogensRequest) (*Pathogens, error)
	// Retrives a single pathogen resource
	GetPathogen(context.Context, *GetPathogenRequest) (*Pathogen, error)
}

func RegisterPathogenAPIServer(s *grpc.Server, srv PathogenAPIServer) {
	s.RegisterService(&_PathogenAPI_serviceDesc, srv)
}

func _PathogenAPI_CreatePathogen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePathogenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PathogenAPIServer).CreatePathogen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.pathogen.PathogenAPI/CreatePathogen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PathogenAPIServer).CreatePathogen(ctx, req.(*CreatePathogenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PathogenAPI_UpdatePathogen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePathogenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PathogenAPIServer).UpdatePathogen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.pathogen.PathogenAPI/UpdatePathogen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PathogenAPIServer).UpdatePathogen(ctx, req.(*UpdatePathogenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PathogenAPI_DeletePathogen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePathogenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PathogenAPIServer).DeletePathogen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.pathogen.PathogenAPI/DeletePathogen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PathogenAPIServer).DeletePathogen(ctx, req.(*DeletePathogenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PathogenAPI_ListPathogens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPathogensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PathogenAPIServer).ListPathogens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.pathogen.PathogenAPI/ListPathogens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PathogenAPIServer).ListPathogens(ctx, req.(*ListPathogensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PathogenAPI_SearchPathogens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchPathogensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PathogenAPIServer).SearchPathogens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.pathogen.PathogenAPI/SearchPathogens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PathogenAPIServer).SearchPathogens(ctx, req.(*SearchPathogensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PathogenAPI_GetPathogen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPathogenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PathogenAPIServer).GetPathogen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/antibug.pathogen.PathogenAPI/GetPathogen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PathogenAPIServer).GetPathogen(ctx, req.(*GetPathogenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PathogenAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "antibug.pathogen.PathogenAPI",
	HandlerType: (*PathogenAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePathogen",
			Handler:    _PathogenAPI_CreatePathogen_Handler,
		},
		{
			MethodName: "UpdatePathogen",
			Handler:    _PathogenAPI_UpdatePathogen_Handler,
		},
		{
			MethodName: "DeletePathogen",
			Handler:    _PathogenAPI_DeletePathogen_Handler,
		},
		{
			MethodName: "ListPathogens",
			Handler:    _PathogenAPI_ListPathogens_Handler,
		},
		{
			MethodName: "SearchPathogens",
			Handler:    _PathogenAPI_SearchPathogens_Handler,
		},
		{
			MethodName: "GetPathogen",
			Handler:    _PathogenAPI_GetPathogen_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pathogen.proto",
}
