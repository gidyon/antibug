apiVersion: apps/v1
kind: Deployment
metadata:
  name: antibug-pathogen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: antibug-pathogen
  template:
    metadata:
      labels:
        app: antibug-pathogen
    spec:
      containers:
      - name: antibug-pathogen
        image: gidyon/antibug-pathogen:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        env:
        - name: JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: jwt-signing-key
              key: signing-key
        readinessProbe: # Checks that the container is started
          httpGet:
            path: /api/antibug/pathogens/health/ready
            port: 80
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe: # Checks that the container is running
          httpGet:
            path: /api/antibug/pathogens/health/live
            port: 80
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/configs/
          readOnly: true
        - name: mysql-creds
          mountPath: /app/secrets/mysql/
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: pathogen-istio-v1
      - name: mysql-creds
        secret:
          secretName: mysql-creds

---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "antibug-pathogen-hpa"
  labels:
    app: "antibug-pathogen"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "antibug-pathogen"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      targetAverageUtilization: 80

---
apiVersion: v1
kind: Service
metadata:
  name: pathogen
  labels:
    app: pathogen
spec:
  selector:
    app: antibug-pathogen
  ports:
  - port: 80
    name: http